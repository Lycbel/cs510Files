==== Building LuaJIT 2.0.5 ====
make -C src
make[1]: Entering directory '/home/andy/Desktop/test598/curlMini/cs510Files/report6/LuaJit/total_luajit/LuaJIT/src'
HOSTCC    host/buildvm.o
HOSTCC    host/buildvm_asm.o
HOSTCC    host/buildvm_peobj.o
HOSTCC    host/buildvm_lib.o
HOSTCC    host/buildvm_fold.o
HOSTLINK  host/buildvm
BUILDVM   lj_vm.s
ASM       lj_vm.o
CC        lj_gc.o
lj_gc.c:176:2: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_gc.c:176:2: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

BUILDVM   lj_ffdef.h
CC        lj_err.o
CC        lj_char.o
BUILDVM   lj_bcdef.h
CC        lj_bc.o
CC        lj_obj.o
CC        lj_str.o
lj_str.c:293:7: error: Trying to look up identifier __builtin_clz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_str.c:293:7: error: Trying to look up identifier __builtin_clz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

CC        lj_tab.o
lj_tab.c:104:5: error: Potential negative zero produced via bitwise operations, undefined under sign and magnitude or one's complement arithmetic, implementation-defined otherwise.

    Implementation-dependent undefined behavior (IMPLUB-CEB12):
        see C11 section 6.2.6.2:4 http://rvdoc.org/C11/6.2.6.2
        see C11 section J.2:1 item 14 http://rvdoc.org/C11/J.2
        see CERT-C section INT13-C http://rvdoc.org/CERT-C/INT13-C
        see CERT-C section MSC15-C http://rvdoc.org/CERT-C/MSC15-C
        see MISRA-C section 8.1:3 http://rvdoc.org/MISRA-C/8.1

lj_tab.c:114:5: error: Potential negative zero produced via bitwise operations, undefined under sign and magnitude or one's complement arithmetic, implementation-defined otherwise.

    Implementation-dependent undefined behavior (IMPLUB-CEB12):
        see C11 section 6.2.6.2:4 http://rvdoc.org/C11/6.2.6.2
        see C11 section J.2:1 item 14 http://rvdoc.org/C11/J.2
        see CERT-C section INT13-C http://rvdoc.org/CERT-C/INT13-C
        see CERT-C section MSC15-C http://rvdoc.org/CERT-C/MSC15-C
        see MISRA-C section 8.1:3 http://rvdoc.org/MISRA-C/8.1

lj_tab.c:167:3: error: Trying to look up identifier __builtin_clz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_tab.c:284:7: error: Trying to look up identifier __builtin_clz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_tab.c:351:3: error: Trying to look up identifier __builtin_clz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_tab.c:363:3: error: Trying to look up identifier __builtin_clz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_tab.c:104:5: error: Potential negative zero produced via bitwise operations, undefined under sign and magnitude or one's complement arithmetic, implementation-defined otherwise.

    Implementation-dependent undefined behavior (IMPLUB-CEB12):
        see C11 section 6.2.6.2:4 http://rvdoc.org/C11/6.2.6.2
        see C11 section J.2:1 item 14 http://rvdoc.org/C11/J.2
        see CERT-C section INT13-C http://rvdoc.org/CERT-C/INT13-C
        see CERT-C section MSC15-C http://rvdoc.org/CERT-C/MSC15-C
        see MISRA-C section 8.1:3 http://rvdoc.org/MISRA-C/8.1

lj_tab.c:114:5: error: Potential negative zero produced via bitwise operations, undefined under sign and magnitude or one's complement arithmetic, implementation-defined otherwise.

    Implementation-dependent undefined behavior (IMPLUB-CEB12):
        see C11 section 6.2.6.2:4 http://rvdoc.org/C11/6.2.6.2
        see C11 section J.2:1 item 14 http://rvdoc.org/C11/J.2
        see CERT-C section INT13-C http://rvdoc.org/CERT-C/INT13-C
        see CERT-C section MSC15-C http://rvdoc.org/CERT-C/MSC15-C
        see MISRA-C section 8.1:3 http://rvdoc.org/MISRA-C/8.1

lj_tab.c:167:3: error: Trying to look up identifier __builtin_clz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_tab.c:284:7: error: Trying to look up identifier __builtin_clz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_tab.c:351:3: error: Trying to look up identifier __builtin_clz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_tab.c:363:3: error: Trying to look up identifier __builtin_clz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

CC        lj_func.o
CC        lj_udata.o
CC        lj_meta.o
lj_meta.c:272:9: error: Computing pointer difference between two different objects.

    Undefined behavior (UB-CEA5):
        see C11 section 6.5.6:9 http://rvdoc.org/C11/6.5.6
        see C11 section J.2:1 item 48 http://rvdoc.org/C11/J.2
        see CERT-C section ARR36-C http://rvdoc.org/CERT-C/ARR36-C
        see MISRA-C section 8.18:2 http://rvdoc.org/MISRA-C/8.18
        see MISRA-C section 8.1:3 http://rvdoc.org/MISRA-C/8.1

In file included from lj_meta.c:12:0:
lj_meta.c: In function ‘mmcall’:
lj_obj.h:734:25: warning: ISO C forbids conversion of function pointer to object pointer type [-Wpedantic]
   ((o)->u64 = (uint64_t)(void *)(f) - (uint64_t)lj_vm_asm_begin)
                         ^
lj_meta.c:116:3: note: in expansion of macro ‘setcont’
   setcont(top, cont);  /* Assembler VM stores PC in upper word. */
   ^
lj_meta.c: In function ‘lj_meta_cat’:
lj_obj.h:734:25: warning: ISO C forbids conversion of function pointer to object pointer type [-Wpedantic]
   ((o)->u64 = (uint64_t)(void *)(f) - (uint64_t)lj_vm_asm_begin)
                         ^
lj_meta.c:272:7: note: in expansion of macro ‘setcont’
       setcont(top-1, lj_cont_cat);
       ^
lj_meta.c: In function ‘lj_meta_equal’:
lj_obj.h:734:25: warning: ISO C forbids conversion of function pointer to object pointer type [-Wpedantic]
   ((o)->u64 = (uint64_t)(void *)(f) - (uint64_t)lj_vm_asm_begin)
                         ^
lj_meta.c:341:5: note: in expansion of macro ‘setcont’
     setcont(top, ne ? lj_cont_condf : lj_cont_condt);
     ^
lj_meta.c:272:9: error: Computing pointer difference between two different objects.

    Undefined behavior (UB-CEA5):
        see C11 section 6.5.6:9 http://rvdoc.org/C11/6.5.6
        see C11 section J.2:1 item 48 http://rvdoc.org/C11/J.2
        see CERT-C section ARR36-C http://rvdoc.org/CERT-C/ARR36-C
        see MISRA-C section 8.18:2 http://rvdoc.org/MISRA-C/8.18
        see MISRA-C section 8.1:3 http://rvdoc.org/MISRA-C/8.1

In file included from lj_meta.c:12:0:
lj_meta.c: In function ‘mmcall’:
lj_obj.h:734:25: warning: ISO C forbids conversion of function pointer to object pointer type [-Wpedantic]
   ((o)->u64 = (uint64_t)(void *)(f) - (uint64_t)lj_vm_asm_begin)
                         ^
lj_meta.c:116:3: note: in expansion of macro ‘setcont’
   setcont(top, cont);  /* Assembler VM stores PC in upper word. */
   ^
lj_meta.c: In function ‘lj_meta_cat’:
lj_obj.h:734:25: warning: ISO C forbids conversion of function pointer to object pointer type [-Wpedantic]
   ((o)->u64 = (uint64_t)(void *)(f) - (uint64_t)lj_vm_asm_begin)
                         ^
lj_meta.c:272:7: note: in expansion of macro ‘setcont’
       setcont(top-1, lj_cont_cat);
       ^
lj_meta.c: In function ‘lj_meta_equal’:
lj_obj.h:734:25: warning: ISO C forbids conversion of function pointer to object pointer type [-Wpedantic]
   ((o)->u64 = (uint64_t)(void *)(f) - (uint64_t)lj_vm_asm_begin)
                         ^
lj_meta.c:341:5: note: in expansion of macro ‘setcont’
     setcont(top, ne ? lj_cont_condf : lj_cont_condt);
     ^
CC        lj_debug.o
lj_debug.c: In function ‘lj_debug_pushloc’:
lj_debug.c:398:21: warning: format ‘%p’ expects argument of type ‘void *’, but argument 3 has type ‘GCproto * {aka struct GCproto *}’ [-Wformat=]
     lj_str_pushf(L, "%p:%d", pt, line);
                     ^
lj_debug.c: In function ‘lj_debug_pushloc’:
lj_debug.c:398:21: warning: format ‘%p’ expects argument of type ‘void *’, but argument 3 has type ‘GCproto * {aka struct GCproto *}’ [-Wformat=]
     lj_str_pushf(L, "%p:%d", pt, line);
                     ^
CC        lj_state.o
CC        lj_dispatch.o
In file included from lj_dispatch.c:28:0:
lj_dispatch.c: In function ‘lj_dispatch_init’:
lj_vm.h:114:27: warning: ISO C forbids conversion of object pointer to function pointer type [-Wpedantic]
 #define makeasmfunc(ofs) ((ASMFunction)(lj_vm_asm_begin + (ofs)))
                           ^
lj_dispatch.c:54:38: note: in expansion of macro ‘makeasmfunc’
     disp[GG_LEN_DDISP+i] = disp[i] = makeasmfunc(lj_bc_ofs[i]);
                                      ^
lj_vm.h:114:27: warning: ISO C forbids conversion of object pointer to function pointer type [-Wpedantic]
 #define makeasmfunc(ofs) ((ASMFunction)(lj_vm_asm_begin + (ofs)))
                           ^
lj_dispatch.c:56:15: note: in expansion of macro ‘makeasmfunc’
     disp[i] = makeasmfunc(lj_bc_ofs[i]);
               ^
lj_dispatch.c: In function ‘lj_dispatch_update’:
lj_vm.h:114:27: warning: ISO C forbids conversion of object pointer to function pointer type [-Wpedantic]
 #define makeasmfunc(ofs) ((ASMFunction)(lj_vm_asm_begin + (ofs)))
                           ^
lj_dispatch.c:111:16: note: in expansion of macro ‘makeasmfunc’
       f_forl = makeasmfunc(lj_bc_ofs[BC_FORL]);
                ^
lj_vm.h:114:27: warning: ISO C forbids conversion of object pointer to function pointer type [-Wpedantic]
 #define makeasmfunc(ofs) ((ASMFunction)(lj_vm_asm_begin + (ofs)))
                           ^
lj_dispatch.c:112:17: note: in expansion of macro ‘makeasmfunc’
       f_iterl = makeasmfunc(lj_bc_ofs[BC_ITERL]);
                 ^
lj_vm.h:114:27: warning: ISO C forbids conversion of object pointer to function pointer type [-Wpedantic]
 #define makeasmfunc(ofs) ((ASMFunction)(lj_vm_asm_begin + (ofs)))
                           ^
lj_dispatch.c:113:16: note: in expansion of macro ‘makeasmfunc’
       f_loop = makeasmfunc(lj_bc_ofs[BC_LOOP]);
                ^
lj_vm.h:114:27: warning: ISO C forbids conversion of object pointer to function pointer type [-Wpedantic]
 #define makeasmfunc(ofs) ((ASMFunction)(lj_vm_asm_begin + (ofs)))
                           ^
lj_dispatch.c:114:17: note: in expansion of macro ‘makeasmfunc’
       f_funcf = makeasmfunc(lj_bc_ofs[BC_FUNCF]);
                 ^
lj_vm.h:114:27: warning: ISO C forbids conversion of object pointer to function pointer type [-Wpedantic]
 #define makeasmfunc(ofs) ((ASMFunction)(lj_vm_asm_begin + (ofs)))
                           ^
lj_dispatch.c:115:17: note: in expansion of macro ‘makeasmfunc’
       f_funcv = makeasmfunc(lj_bc_ofs[BC_FUNCV]);
                 ^
lj_vm.h:114:27: warning: ISO C forbids conversion of object pointer to function pointer type [-Wpedantic]
 #define makeasmfunc(ofs) ((ASMFunction)(lj_vm_asm_begin + (ofs)))
                           ^
lj_dispatch.c:120:17: note: in expansion of macro ‘makeasmfunc’
       f_funcf = makeasmfunc(lj_bc_ofs[BC_IFUNCF]);
                 ^
lj_vm.h:114:27: warning: ISO C forbids conversion of object pointer to function pointer type [-Wpedantic]
 #define makeasmfunc(ofs) ((ASMFunction)(lj_vm_asm_begin + (ofs)))
                           ^
lj_dispatch.c:121:17: note: in expansion of macro ‘makeasmfunc’
       f_funcv = makeasmfunc(lj_bc_ofs[BC_IFUNCV]);
                 ^
lj_vm.h:114:27: warning: ISO C forbids conversion of object pointer to function pointer type [-Wpedantic]
 #define makeasmfunc(ofs) ((ASMFunction)(lj_vm_asm_begin + (ofs)))
                           ^
lj_dispatch.c:172:14: note: in expansion of macro ‘makeasmfunc’
    disp[i] = makeasmfunc(lj_bc_ofs[i]);
              ^
lj_dispatch.c: In function ‘luaJIT_setmode’:
lj_dispatch.c:289:15: warning: ISO C forbids conversion of object pointer to function pointer type [-Wpedantic]
    g->wrapf = (lua_CFunction)lightudV(tv);
               ^
In file included from lj_dispatch.c:28:0:
lj_dispatch.c: In function ‘lj_dispatch_call’:
lj_vm.h:114:27: warning: ISO C forbids conversion of object pointer to function pointer type [-Wpedantic]
 #define makeasmfunc(ofs) ((ASMFunction)(lj_vm_asm_begin + (ofs)))
                           ^
lj_dispatch.c:492:10: note: in expansion of macro ‘makeasmfunc’
   return makeasmfunc(lj_bc_ofs[op]);  /* Return static dispatch target. */
          ^
In file included from lj_dispatch.c:28:0:
lj_dispatch.c: In function ‘lj_dispatch_init’:
lj_vm.h:114:27: warning: ISO C forbids conversion of object pointer to function pointer type [-Wpedantic]
 #define makeasmfunc(ofs) ((ASMFunction)(lj_vm_asm_begin + (ofs)))
                           ^
lj_dispatch.c:54:38: note: in expansion of macro ‘makeasmfunc’
     disp[GG_LEN_DDISP+i] = disp[i] = makeasmfunc(lj_bc_ofs[i]);
                                      ^
lj_vm.h:114:27: warning: ISO C forbids conversion of object pointer to function pointer type [-Wpedantic]
 #define makeasmfunc(ofs) ((ASMFunction)(lj_vm_asm_begin + (ofs)))
                           ^
lj_dispatch.c:56:15: note: in expansion of macro ‘makeasmfunc’
     disp[i] = makeasmfunc(lj_bc_ofs[i]);
               ^
lj_dispatch.c: In function ‘lj_dispatch_update’:
lj_vm.h:114:27: warning: ISO C forbids conversion of object pointer to function pointer type [-Wpedantic]
 #define makeasmfunc(ofs) ((ASMFunction)(lj_vm_asm_begin + (ofs)))
                           ^
lj_dispatch.c:111:16: note: in expansion of macro ‘makeasmfunc’
       f_forl = makeasmfunc(lj_bc_ofs[BC_FORL]);
                ^
lj_vm.h:114:27: warning: ISO C forbids conversion of object pointer to function pointer type [-Wpedantic]
 #define makeasmfunc(ofs) ((ASMFunction)(lj_vm_asm_begin + (ofs)))
                           ^
lj_dispatch.c:112:17: note: in expansion of macro ‘makeasmfunc’
       f_iterl = makeasmfunc(lj_bc_ofs[BC_ITERL]);
                 ^
lj_vm.h:114:27: warning: ISO C forbids conversion of object pointer to function pointer type [-Wpedantic]
 #define makeasmfunc(ofs) ((ASMFunction)(lj_vm_asm_begin + (ofs)))
                           ^
lj_dispatch.c:113:16: note: in expansion of macro ‘makeasmfunc’
       f_loop = makeasmfunc(lj_bc_ofs[BC_LOOP]);
                ^
lj_vm.h:114:27: warning: ISO C forbids conversion of object pointer to function pointer type [-Wpedantic]
 #define makeasmfunc(ofs) ((ASMFunction)(lj_vm_asm_begin + (ofs)))
                           ^
lj_dispatch.c:114:17: note: in expansion of macro ‘makeasmfunc’
       f_funcf = makeasmfunc(lj_bc_ofs[BC_FUNCF]);
                 ^
lj_vm.h:114:27: warning: ISO C forbids conversion of object pointer to function pointer type [-Wpedantic]
 #define makeasmfunc(ofs) ((ASMFunction)(lj_vm_asm_begin + (ofs)))
                           ^
lj_dispatch.c:115:17: note: in expansion of macro ‘makeasmfunc’
       f_funcv = makeasmfunc(lj_bc_ofs[BC_FUNCV]);
                 ^
lj_vm.h:114:27: warning: ISO C forbids conversion of object pointer to function pointer type [-Wpedantic]
 #define makeasmfunc(ofs) ((ASMFunction)(lj_vm_asm_begin + (ofs)))
                           ^
lj_dispatch.c:120:17: note: in expansion of macro ‘makeasmfunc’
       f_funcf = makeasmfunc(lj_bc_ofs[BC_IFUNCF]);
                 ^
lj_vm.h:114:27: warning: ISO C forbids conversion of object pointer to function pointer type [-Wpedantic]
 #define makeasmfunc(ofs) ((ASMFunction)(lj_vm_asm_begin + (ofs)))
                           ^
lj_dispatch.c:121:17: note: in expansion of macro ‘makeasmfunc’
       f_funcv = makeasmfunc(lj_bc_ofs[BC_IFUNCV]);
                 ^
lj_vm.h:114:27: warning: ISO C forbids conversion of object pointer to function pointer type [-Wpedantic]
 #define makeasmfunc(ofs) ((ASMFunction)(lj_vm_asm_begin + (ofs)))
                           ^
lj_dispatch.c:172:14: note: in expansion of macro ‘makeasmfunc’
    disp[i] = makeasmfunc(lj_bc_ofs[i]);
              ^
lj_dispatch.c: In function ‘luaJIT_setmode’:
lj_dispatch.c:289:15: warning: ISO C forbids conversion of object pointer to function pointer type [-Wpedantic]
    g->wrapf = (lua_CFunction)lightudV(tv);
               ^
In file included from lj_dispatch.c:28:0:
lj_dispatch.c: In function ‘lj_dispatch_call’:
lj_vm.h:114:27: warning: ISO C forbids conversion of object pointer to function pointer type [-Wpedantic]
 #define makeasmfunc(ofs) ((ASMFunction)(lj_vm_asm_begin + (ofs)))
                           ^
lj_dispatch.c:492:10: note: in expansion of macro ‘makeasmfunc’
   return makeasmfunc(lj_bc_ofs[op]);  /* Return static dispatch target. */
          ^
CC        lj_vmevent.o
lj_vmevent.h:25:1: error: Enum initializer outside the range representable by int.

    Constraint violation (CV-CDE2):
        see C11 section 6.7.2.2:2 http://rvdoc.org/C11/6.7.2.2
        see CERT-C section MSC40-C http://rvdoc.org/CERT-C/MSC40-C
        see MISRA-C section 8.1:1 http://rvdoc.org/MISRA-C/8.1

lj_vmevent.h:25:1: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

In file included from lj_vmevent.c:17:0:
lj_vmevent.h:22:23: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
   LJ_VMEVENT_##name = ((LJ_VMEVENT_##name##_) & 7)|((hash) << 3)
                       ^
lj_vmevent.h:27:3: note: in expansion of macro ‘VMEVENT_DEF’
   VMEVENT_DEF(TRACE, 0xb2d91467),
   ^
lj_vmevent.h:22:23: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
   LJ_VMEVENT_##name = ((LJ_VMEVENT_##name##_) & 7)|((hash) << 3)
                       ^
lj_vmevent.h:28:3: note: in expansion of macro ‘VMEVENT_DEF’
   VMEVENT_DEF(RECORD, 0x9284bf4f),
   ^
lj_vmevent.h:22:23: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
   LJ_VMEVENT_##name = ((LJ_VMEVENT_##name##_) & 7)|((hash) << 3)
                       ^
lj_vmevent.h:29:3: note: in expansion of macro ‘VMEVENT_DEF’
   VMEVENT_DEF(TEXIT, 0xb29df2b0),
   ^
lj_vmevent.h:25:1: error: Enum initializer outside the range representable by int.

    Constraint violation (CV-CDE2):
        see C11 section 6.7.2.2:2 http://rvdoc.org/C11/6.7.2.2
        see CERT-C section MSC40-C http://rvdoc.org/CERT-C/MSC40-C
        see MISRA-C section 8.1:1 http://rvdoc.org/MISRA-C/8.1

lj_vmevent.h:25:1: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

In file included from lj_vmevent.c:17:0:
lj_vmevent.h:22:23: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
   LJ_VMEVENT_##name = ((LJ_VMEVENT_##name##_) & 7)|((hash) << 3)
                       ^
lj_vmevent.h:27:3: note: in expansion of macro ‘VMEVENT_DEF’
   VMEVENT_DEF(TRACE, 0xb2d91467),
   ^
lj_vmevent.h:22:23: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
   LJ_VMEVENT_##name = ((LJ_VMEVENT_##name##_) & 7)|((hash) << 3)
                       ^
lj_vmevent.h:28:3: note: in expansion of macro ‘VMEVENT_DEF’
   VMEVENT_DEF(RECORD, 0x9284bf4f),
   ^
lj_vmevent.h:22:23: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
   LJ_VMEVENT_##name = ((LJ_VMEVENT_##name##_) & 7)|((hash) << 3)
                       ^
lj_vmevent.h:29:3: note: in expansion of macro ‘VMEVENT_DEF’
   VMEVENT_DEF(TEXIT, 0xb29df2b0),
   ^
CC        lj_vmmath.o
CC        lj_strscan.o
lj_strscan.c:83:5: error: Trying to look up identifier __builtin_clzll, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_strscan.c:83:5: error: Trying to look up identifier __builtin_clzll, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

CC        lj_api.o
lj_api.c:654:3: error: Trying to look up identifier __builtin_clz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_api.c:1113:9: error: Computing pointer difference between two different objects.

    Undefined behavior (UB-CEA5):
        see C11 section 6.5.6:9 http://rvdoc.org/C11/6.5.6
        see C11 section J.2:1 item 48 http://rvdoc.org/C11/J.2
        see CERT-C section ARR36-C http://rvdoc.org/CERT-C/ARR36-C
        see MISRA-C section 8.18:2 http://rvdoc.org/MISRA-C/8.18
        see MISRA-C section 8.1:3 http://rvdoc.org/MISRA-C/8.1

In file included from lj_api.c:12:0:
lj_api.c: In function ‘lua_yield’:
lj_obj.h:734:25: warning: ISO C forbids conversion of function pointer to object pointer type [-Wpedantic]
   ((o)->u64 = (uint64_t)(void *)(f) - (uint64_t)lj_vm_asm_begin)
                         ^
lj_api.c:1113:7: note: in expansion of macro ‘setcont’
       setcont(top+1, lj_cont_hook);
       ^
lj_api.c:654:3: error: Trying to look up identifier __builtin_clz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_api.c:1113:9: error: Computing pointer difference between two different objects.

    Undefined behavior (UB-CEA5):
        see C11 section 6.5.6:9 http://rvdoc.org/C11/6.5.6
        see C11 section J.2:1 item 48 http://rvdoc.org/C11/J.2
        see CERT-C section ARR36-C http://rvdoc.org/CERT-C/ARR36-C
        see MISRA-C section 8.18:2 http://rvdoc.org/MISRA-C/8.18
        see MISRA-C section 8.1:3 http://rvdoc.org/MISRA-C/8.1

In file included from lj_api.c:12:0:
lj_api.c: In function ‘lua_yield’:
lj_obj.h:734:25: warning: ISO C forbids conversion of function pointer to object pointer type [-Wpedantic]
   ((o)->u64 = (uint64_t)(void *)(f) - (uint64_t)lj_vm_asm_begin)
                         ^
lj_api.c:1113:7: note: in expansion of macro ‘setcont’
       setcont(top+1, lj_cont_hook);
       ^
CC        lj_lex.o
CC        lj_parse.o
lj_vmevent.h:25:1: error: Enum initializer outside the range representable by int.

    Constraint violation (CV-CDE2):
        see C11 section 6.7.2.2:2 http://rvdoc.org/C11/6.7.2.2
        see CERT-C section MSC40-C http://rvdoc.org/CERT-C/MSC40-C
        see MISRA-C section 8.1:1 http://rvdoc.org/MISRA-C/8.1

lj_vmevent.h:25:1: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_parse.c:689:6: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_parse.c:692:5: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_parse.c:953:4: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_parse.c:1185:6: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_parse.c:1227:4: warning: Conversion from an integer to non-null pointer.

    Implementation defined behavior (IMPL-CCV13):
        see C11 section 6.3.2.3:5 http://rvdoc.org/C11/6.3.2.3
        see CERT section INT36-C http://rvdoc.org/CERT/INT36-C

lj_parse.c:1233:4: warning: Conversion from an integer to non-null pointer.

    Implementation defined behavior (IMPL-CCV13):
        see C11 section 6.3.2.3:5 http://rvdoc.org/C11/6.3.2.3
        see CERT section INT36-C http://rvdoc.org/CERT/INT36-C

lj_parse.c:1280:7: warning: Conversion from an integer to non-null pointer.

    Implementation defined behavior (IMPL-CCV13):
        see C11 section 6.3.2.3:5 http://rvdoc.org/C11/6.3.2.3
        see CERT section INT36-C http://rvdoc.org/CERT/INT36-C

lj_parse.c:1771:2: error: Trying to look up identifier __builtin_clz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_parse.c:1820:6: error: Trying to look up identifier __builtin_clz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_parse.c:2377:3: warning: Conversion from an integer to non-null pointer.

    Implementation defined behavior (IMPL-CCV13):
        see C11 section 6.3.2.3:5 http://rvdoc.org/C11/6.3.2.3
        see CERT section INT36-C http://rvdoc.org/CERT/INT36-C

lj_parse.c:2491:3: warning: Conversion from an integer to non-null pointer.

    Implementation defined behavior (IMPL-CCV13):
        see C11 section 6.3.2.3:5 http://rvdoc.org/C11/6.3.2.3
        see CERT section INT36-C http://rvdoc.org/CERT/INT36-C

lj_parse.c:2492:3: warning: Conversion from an integer to non-null pointer.

    Implementation defined behavior (IMPL-CCV13):
        see C11 section 6.3.2.3:5 http://rvdoc.org/C11/6.3.2.3
        see CERT section INT36-C http://rvdoc.org/CERT/INT36-C

lj_parse.c:2493:3: warning: Conversion from an integer to non-null pointer.

    Implementation defined behavior (IMPL-CCV13):
        see C11 section 6.3.2.3:5 http://rvdoc.org/C11/6.3.2.3
        see CERT section INT36-C http://rvdoc.org/CERT/INT36-C

lj_parse.c:2508:3: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_parse.c:2515:3: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_parse.c:2565:3: warning: Conversion from an integer to non-null pointer.

    Implementation defined behavior (IMPL-CCV13):
        see C11 section 6.3.2.3:5 http://rvdoc.org/C11/6.3.2.3
        see CERT section INT36-C http://rvdoc.org/CERT/INT36-C

lj_parse.c:2566:3: warning: Conversion from an integer to non-null pointer.

    Implementation defined behavior (IMPL-CCV13):
        see C11 section 6.3.2.3:5 http://rvdoc.org/C11/6.3.2.3
        see CERT section INT36-C http://rvdoc.org/CERT/INT36-C

lj_parse.c:2567:3: warning: Conversion from an integer to non-null pointer.

    Implementation defined behavior (IMPL-CCV13):
        see C11 section 6.3.2.3:5 http://rvdoc.org/C11/6.3.2.3
        see CERT section INT36-C http://rvdoc.org/CERT/INT36-C

lj_parse.c:2579:3: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_parse.c:2588:3: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

In file included from lj_parse.c:27:0:
lj_vmevent.h:22:23: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
   LJ_VMEVENT_##name = ((LJ_VMEVENT_##name##_) & 7)|((hash) << 3)
                       ^
lj_vmevent.h:27:3: note: in expansion of macro ‘VMEVENT_DEF’
   VMEVENT_DEF(TRACE, 0xb2d91467),
   ^
lj_vmevent.h:22:23: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
   LJ_VMEVENT_##name = ((LJ_VMEVENT_##name##_) & 7)|((hash) << 3)
                       ^
lj_vmevent.h:28:3: note: in expansion of macro ‘VMEVENT_DEF’
   VMEVENT_DEF(RECORD, 0x9284bf4f),
   ^
lj_vmevent.h:22:23: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
   LJ_VMEVENT_##name = ((LJ_VMEVENT_##name##_) & 7)|((hash) << 3)
                       ^
lj_vmevent.h:29:3: note: in expansion of macro ‘VMEVENT_DEF’
   VMEVENT_DEF(TEXIT, 0xb29df2b0),
   ^
lj_vmevent.h:25:1: error: Enum initializer outside the range representable by int.

    Constraint violation (CV-CDE2):
        see C11 section 6.7.2.2:2 http://rvdoc.org/C11/6.7.2.2
        see CERT-C section MSC40-C http://rvdoc.org/CERT-C/MSC40-C
        see MISRA-C section 8.1:1 http://rvdoc.org/MISRA-C/8.1

lj_vmevent.h:25:1: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_parse.c:689:6: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_parse.c:692:5: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_parse.c:953:4: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_parse.c:1185:6: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_parse.c:1227:4: warning: Conversion from an integer to non-null pointer.

    Implementation defined behavior (IMPL-CCV13):
        see C11 section 6.3.2.3:5 http://rvdoc.org/C11/6.3.2.3
        see CERT section INT36-C http://rvdoc.org/CERT/INT36-C

lj_parse.c:1233:4: warning: Conversion from an integer to non-null pointer.

    Implementation defined behavior (IMPL-CCV13):
        see C11 section 6.3.2.3:5 http://rvdoc.org/C11/6.3.2.3
        see CERT section INT36-C http://rvdoc.org/CERT/INT36-C

lj_parse.c:1280:7: warning: Conversion from an integer to non-null pointer.

    Implementation defined behavior (IMPL-CCV13):
        see C11 section 6.3.2.3:5 http://rvdoc.org/C11/6.3.2.3
        see CERT section INT36-C http://rvdoc.org/CERT/INT36-C

lj_parse.c:1771:2: error: Trying to look up identifier __builtin_clz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_parse.c:1820:6: error: Trying to look up identifier __builtin_clz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_parse.c:2377:3: warning: Conversion from an integer to non-null pointer.

    Implementation defined behavior (IMPL-CCV13):
        see C11 section 6.3.2.3:5 http://rvdoc.org/C11/6.3.2.3
        see CERT section INT36-C http://rvdoc.org/CERT/INT36-C

lj_parse.c:2491:3: warning: Conversion from an integer to non-null pointer.

    Implementation defined behavior (IMPL-CCV13):
        see C11 section 6.3.2.3:5 http://rvdoc.org/C11/6.3.2.3
        see CERT section INT36-C http://rvdoc.org/CERT/INT36-C

lj_parse.c:2492:3: warning: Conversion from an integer to non-null pointer.

    Implementation defined behavior (IMPL-CCV13):
        see C11 section 6.3.2.3:5 http://rvdoc.org/C11/6.3.2.3
        see CERT section INT36-C http://rvdoc.org/CERT/INT36-C

lj_parse.c:2493:3: warning: Conversion from an integer to non-null pointer.

    Implementation defined behavior (IMPL-CCV13):
        see C11 section 6.3.2.3:5 http://rvdoc.org/C11/6.3.2.3
        see CERT section INT36-C http://rvdoc.org/CERT/INT36-C

lj_parse.c:2508:3: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_parse.c:2515:3: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_parse.c:2565:3: warning: Conversion from an integer to non-null pointer.

    Implementation defined behavior (IMPL-CCV13):
        see C11 section 6.3.2.3:5 http://rvdoc.org/C11/6.3.2.3
        see CERT section INT36-C http://rvdoc.org/CERT/INT36-C

lj_parse.c:2566:3: warning: Conversion from an integer to non-null pointer.

    Implementation defined behavior (IMPL-CCV13):
        see C11 section 6.3.2.3:5 http://rvdoc.org/C11/6.3.2.3
        see CERT section INT36-C http://rvdoc.org/CERT/INT36-C

lj_parse.c:2567:3: warning: Conversion from an integer to non-null pointer.

    Implementation defined behavior (IMPL-CCV13):
        see C11 section 6.3.2.3:5 http://rvdoc.org/C11/6.3.2.3
        see CERT section INT36-C http://rvdoc.org/CERT/INT36-C

lj_parse.c:2579:3: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_parse.c:2588:3: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

In file included from lj_parse.c:27:0:
lj_vmevent.h:22:23: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
   LJ_VMEVENT_##name = ((LJ_VMEVENT_##name##_) & 7)|((hash) << 3)
                       ^
lj_vmevent.h:27:3: note: in expansion of macro ‘VMEVENT_DEF’
   VMEVENT_DEF(TRACE, 0xb2d91467),
   ^
lj_vmevent.h:22:23: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
   LJ_VMEVENT_##name = ((LJ_VMEVENT_##name##_) & 7)|((hash) << 3)
                       ^
lj_vmevent.h:28:3: note: in expansion of macro ‘VMEVENT_DEF’
   VMEVENT_DEF(RECORD, 0x9284bf4f),
   ^
lj_vmevent.h:22:23: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
   LJ_VMEVENT_##name = ((LJ_VMEVENT_##name##_) & 7)|((hash) << 3)
                       ^
lj_vmevent.h:29:3: note: in expansion of macro ‘VMEVENT_DEF’
   VMEVENT_DEF(TEXIT, 0xb29df2b0),
   ^
CC        lj_bcread.o
lj_bcread.c:224:3: error: Trying to look up identifier __builtin_clz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_bcread.c:224:3: error: Trying to look up identifier __builtin_clz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

CC        lj_bcwrite.o
lj_bcwrite.c:327:5: error: Trying to look up identifier __builtin_clz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_bcwrite.c:327:5: error: Trying to look up identifier __builtin_clz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

CC        lj_load.o
CC        lj_ir.o
CC        lj_opt_mem.o
BUILDVM   lj_folddef.h
CC        lj_opt_fold.o
lj_opt_fold.c:1212:6: error: Trying to look up identifier __builtin_clz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_opt_fold.c:1212:6: error: Trying to look up identifier __builtin_clz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

CC        lj_opt_narrow.o
CC        lj_opt_dce.o
CC        lj_opt_loop.o
CC        lj_opt_split.o
CC        lj_opt_sink.o
lj_target_x86.h:191:1: error: Signed integer overflow.

    Undefined behavior (UB-CCV1):
        see C11 section 6.5:5 http://rvdoc.org/C11/6.5
        see C11 section J.2:1 item 36 http://rvdoc.org/C11/J.2
        see CERT-C section INT32-C http://rvdoc.org/CERT-C/INT32-C
        see MISRA-C section 8.1:3 http://rvdoc.org/MISRA-C/8.1

lj_target_x86.h:191:1: error: Enum initializer outside the range representable by int.

    Constraint violation (CV-CDE2):
        see C11 section 6.7.2.2:2 http://rvdoc.org/C11/6.7.2.2
        see CERT-C section MSC40-C http://rvdoc.org/CERT-C/MSC40-C
        see MISRA-C section 8.1:1 http://rvdoc.org/MISRA-C/8.1

lj_target_x86.h:191:1: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_target_x86.h:191:1: error: Potential negative zero produced via bitwise operations, undefined under sign and magnitude or one's complement arithmetic, implementation-defined otherwise.

    Implementation-dependent undefined behavior (IMPLUB-CEB12):
        see C11 section 6.2.6.2:4 http://rvdoc.org/C11/6.2.6.2
        see C11 section J.2:1 item 14 http://rvdoc.org/C11/J.2
        see CERT-C section INT13-C http://rvdoc.org/CERT-C/INT13-C
        see CERT-C section MSC15-C http://rvdoc.org/CERT-C/MSC15-C
        see MISRA-C section 8.1:3 http://rvdoc.org/MISRA-C/8.1

In file included from lj_target.h:138:0,
                 from lj_opt_sink.c:16:
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:230:12: note: in expansion of macro ‘XO_’
   XO_MOV = XO_(8b),
            ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:231:14: note: in expansion of macro ‘XO_’
   XO_MOVto = XO_(89),
              ^
lj_target_x86.h:182:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_66(o) ((uint32_t)(0x6600fd + (0x##o<<24)))
                  ^
lj_target_x86.h:232:15: note: in expansion of macro ‘XO_66’
   XO_MOVtow = XO_66(89),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:233:15: note: in expansion of macro ‘XO_’
   XO_MOVtob = XO_(88),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:234:14: note: in expansion of macro ‘XO_’
   XO_MOVmi = XO_(c7),
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:235:15: note: in expansion of macro ‘XO_’
   XO_MOVmib = XO_(c6),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:236:12: note: in expansion of macro ‘XO_’
   XO_LEA = XO_(8d),
            ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:237:16: note: in expansion of macro ‘XO_’
   XO_ARITHib = XO_(80),
                ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:238:15: note: in expansion of macro ‘XO_’
   XO_ARITHi = XO_(81),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:239:16: note: in expansion of macro ‘XO_’
   XO_ARITHi8 = XO_(83),
                ^
lj_target_x86.h:182:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_66(o) ((uint32_t)(0x6600fd + (0x##o<<24)))
                  ^
lj_target_x86.h:240:17: note: in expansion of macro ‘XO_66’
   XO_ARITHiw8 = XO_66(83),
                 ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:241:15: note: in expansion of macro ‘XO_’
   XO_SHIFTi = XO_(c1),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:242:15: note: in expansion of macro ‘XO_’
   XO_SHIFT1 = XO_(d1),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:243:16: note: in expansion of macro ‘XO_’
   XO_SHIFTcl = XO_(d3),
                ^
lj_target_x86.h:181:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_0f(o) ((uint32_t)(0x0f00fd + (0x##o<<24)))
                  ^
lj_target_x86.h:244:13: note: in expansion of macro ‘XO_0f’
   XO_IMUL = XO_0f(af),
             ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:248:14: note: in expansion of macro ‘XO_’
   XO_TESTb = XO_(84),
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:249:13: note: in expansion of macro ‘XO_’
   XO_TEST = XO_(85),
             ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:250:16: note: in expansion of macro ‘XO_’
   XO_GROUP3b = XO_(f6),
                ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:251:15: note: in expansion of macro ‘XO_’
   XO_GROUP3 = XO_(f7),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:252:16: note: in expansion of macro ‘XO_’
   XO_GROUP5b = XO_(fe),
                ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:253:15: note: in expansion of macro ‘XO_’
   XO_GROUP5 = XO_(ff),
               ^
lj_target_x86.h:181:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_0f(o) ((uint32_t)(0x0f00fd + (0x##o<<24)))
                  ^
lj_target_x86.h:254:15: note: in expansion of macro ‘XO_0f’
   XO_MOVZXb = XO_0f(b6),
               ^
lj_target_x86.h:181:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_0f(o) ((uint32_t)(0x0f00fd + (0x##o<<24)))
                  ^
lj_target_x86.h:255:15: note: in expansion of macro ‘XO_0f’
   XO_MOVZXw = XO_0f(b7),
               ^
lj_target_x86.h:181:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_0f(o) ((uint32_t)(0x0f00fd + (0x##o<<24)))
                  ^
lj_target_x86.h:256:15: note: in expansion of macro ‘XO_0f’
   XO_MOVSXb = XO_0f(be),
               ^
lj_target_x86.h:181:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_0f(o) ((uint32_t)(0x0f00fd + (0x##o<<24)))
                  ^
lj_target_x86.h:257:15: note: in expansion of macro ‘XO_0f’
   XO_MOVSXw = XO_0f(bf),
               ^
lj_target_x86.h:181:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_0f(o) ((uint32_t)(0x0f00fd + (0x##o<<24)))
                  ^
lj_target_x86.h:259:14: note: in expansion of macro ‘XO_0f’
   XO_BSWAP = XO_0f(c8),
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:291:13: note: in expansion of macro ‘XO_’
   XO_FLDd = XO_(d9), XOg_FLDd = 0,
             ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:292:13: note: in expansion of macro ‘XO_’
   XO_FLDq = XO_(dd), XOg_FLDq = 0,
             ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:293:14: note: in expansion of macro ‘XO_’
   XO_FILDd = XO_(db), XOg_FILDd = 0,
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:294:14: note: in expansion of macro ‘XO_’
   XO_FILDq = XO_(df), XOg_FILDq = 5,
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:295:14: note: in expansion of macro ‘XO_’
   XO_FSTPd = XO_(d9), XOg_FSTPd = 3,
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:296:14: note: in expansion of macro ‘XO_’
   XO_FSTPq = XO_(dd), XOg_FSTPq = 3,
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:297:15: note: in expansion of macro ‘XO_’
   XO_FISTPq = XO_(df), XOg_FISTPq = 7,
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:298:16: note: in expansion of macro ‘XO_’
   XO_FISTTPq = XO_(dd), XOg_FISTTPq = 1,
                ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:299:14: note: in expansion of macro ‘XO_’
   XO_FADDq = XO_(dc), XOg_FADDq = 0,
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:300:14: note: in expansion of macro ‘XO_’
   XO_FLDCW = XO_(d9), XOg_FLDCW = 5,
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:301:15: note: in expansion of macro ‘XO_’
   XO_FNSTCW = XO_(d9), XOg_FNSTCW = 7
               ^
lj_target_x86.h:191:1: error: Signed integer overflow.

    Undefined behavior (UB-CCV1):
        see C11 section 6.5:5 http://rvdoc.org/C11/6.5
        see C11 section J.2:1 item 36 http://rvdoc.org/C11/J.2
        see CERT-C section INT32-C http://rvdoc.org/CERT-C/INT32-C
        see MISRA-C section 8.1:3 http://rvdoc.org/MISRA-C/8.1

lj_target_x86.h:191:1: error: Enum initializer outside the range representable by int.

    Constraint violation (CV-CDE2):
        see C11 section 6.7.2.2:2 http://rvdoc.org/C11/6.7.2.2
        see CERT-C section MSC40-C http://rvdoc.org/CERT-C/MSC40-C
        see MISRA-C section 8.1:1 http://rvdoc.org/MISRA-C/8.1

lj_target_x86.h:191:1: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_target_x86.h:191:1: error: Potential negative zero produced via bitwise operations, undefined under sign and magnitude or one's complement arithmetic, implementation-defined otherwise.

    Implementation-dependent undefined behavior (IMPLUB-CEB12):
        see C11 section 6.2.6.2:4 http://rvdoc.org/C11/6.2.6.2
        see C11 section J.2:1 item 14 http://rvdoc.org/C11/J.2
        see CERT-C section INT13-C http://rvdoc.org/CERT-C/INT13-C
        see CERT-C section MSC15-C http://rvdoc.org/CERT-C/MSC15-C
        see MISRA-C section 8.1:3 http://rvdoc.org/MISRA-C/8.1

In file included from lj_target.h:138:0,
                 from lj_opt_sink.c:16:
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:230:12: note: in expansion of macro ‘XO_’
   XO_MOV = XO_(8b),
            ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:231:14: note: in expansion of macro ‘XO_’
   XO_MOVto = XO_(89),
              ^
lj_target_x86.h:182:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_66(o) ((uint32_t)(0x6600fd + (0x##o<<24)))
                  ^
lj_target_x86.h:232:15: note: in expansion of macro ‘XO_66’
   XO_MOVtow = XO_66(89),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:233:15: note: in expansion of macro ‘XO_’
   XO_MOVtob = XO_(88),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:234:14: note: in expansion of macro ‘XO_’
   XO_MOVmi = XO_(c7),
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:235:15: note: in expansion of macro ‘XO_’
   XO_MOVmib = XO_(c6),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:236:12: note: in expansion of macro ‘XO_’
   XO_LEA = XO_(8d),
            ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:237:16: note: in expansion of macro ‘XO_’
   XO_ARITHib = XO_(80),
                ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:238:15: note: in expansion of macro ‘XO_’
   XO_ARITHi = XO_(81),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:239:16: note: in expansion of macro ‘XO_’
   XO_ARITHi8 = XO_(83),
                ^
lj_target_x86.h:182:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_66(o) ((uint32_t)(0x6600fd + (0x##o<<24)))
                  ^
lj_target_x86.h:240:17: note: in expansion of macro ‘XO_66’
   XO_ARITHiw8 = XO_66(83),
                 ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:241:15: note: in expansion of macro ‘XO_’
   XO_SHIFTi = XO_(c1),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:242:15: note: in expansion of macro ‘XO_’
   XO_SHIFT1 = XO_(d1),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:243:16: note: in expansion of macro ‘XO_’
   XO_SHIFTcl = XO_(d3),
                ^
lj_target_x86.h:181:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_0f(o) ((uint32_t)(0x0f00fd + (0x##o<<24)))
                  ^
lj_target_x86.h:244:13: note: in expansion of macro ‘XO_0f’
   XO_IMUL = XO_0f(af),
             ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:248:14: note: in expansion of macro ‘XO_’
   XO_TESTb = XO_(84),
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:249:13: note: in expansion of macro ‘XO_’
   XO_TEST = XO_(85),
             ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:250:16: note: in expansion of macro ‘XO_’
   XO_GROUP3b = XO_(f6),
                ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:251:15: note: in expansion of macro ‘XO_’
   XO_GROUP3 = XO_(f7),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:252:16: note: in expansion of macro ‘XO_’
   XO_GROUP5b = XO_(fe),
                ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:253:15: note: in expansion of macro ‘XO_’
   XO_GROUP5 = XO_(ff),
               ^
lj_target_x86.h:181:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_0f(o) ((uint32_t)(0x0f00fd + (0x##o<<24)))
                  ^
lj_target_x86.h:254:15: note: in expansion of macro ‘XO_0f’
   XO_MOVZXb = XO_0f(b6),
               ^
lj_target_x86.h:181:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_0f(o) ((uint32_t)(0x0f00fd + (0x##o<<24)))
                  ^
lj_target_x86.h:255:15: note: in expansion of macro ‘XO_0f’
   XO_MOVZXw = XO_0f(b7),
               ^
lj_target_x86.h:181:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_0f(o) ((uint32_t)(0x0f00fd + (0x##o<<24)))
                  ^
lj_target_x86.h:256:15: note: in expansion of macro ‘XO_0f’
   XO_MOVSXb = XO_0f(be),
               ^
lj_target_x86.h:181:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_0f(o) ((uint32_t)(0x0f00fd + (0x##o<<24)))
                  ^
lj_target_x86.h:257:15: note: in expansion of macro ‘XO_0f’
   XO_MOVSXw = XO_0f(bf),
               ^
lj_target_x86.h:181:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_0f(o) ((uint32_t)(0x0f00fd + (0x##o<<24)))
                  ^
lj_target_x86.h:259:14: note: in expansion of macro ‘XO_0f’
   XO_BSWAP = XO_0f(c8),
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:291:13: note: in expansion of macro ‘XO_’
   XO_FLDd = XO_(d9), XOg_FLDd = 0,
             ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:292:13: note: in expansion of macro ‘XO_’
   XO_FLDq = XO_(dd), XOg_FLDq = 0,
             ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:293:14: note: in expansion of macro ‘XO_’
   XO_FILDd = XO_(db), XOg_FILDd = 0,
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:294:14: note: in expansion of macro ‘XO_’
   XO_FILDq = XO_(df), XOg_FILDq = 5,
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:295:14: note: in expansion of macro ‘XO_’
   XO_FSTPd = XO_(d9), XOg_FSTPd = 3,
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:296:14: note: in expansion of macro ‘XO_’
   XO_FSTPq = XO_(dd), XOg_FSTPq = 3,
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:297:15: note: in expansion of macro ‘XO_’
   XO_FISTPq = XO_(df), XOg_FISTPq = 7,
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:298:16: note: in expansion of macro ‘XO_’
   XO_FISTTPq = XO_(dd), XOg_FISTTPq = 1,
                ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:299:14: note: in expansion of macro ‘XO_’
   XO_FADDq = XO_(dc), XOg_FADDq = 0,
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:300:14: note: in expansion of macro ‘XO_’
   XO_FLDCW = XO_(d9), XOg_FLDCW = 5,
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:301:15: note: in expansion of macro ‘XO_’
   XO_FNSTCW = XO_(d9), XOg_FNSTCW = 7
               ^
CC        lj_mcode.o
lj_mcode.c:103:3: warning: Conversion from an integer to non-null pointer.

    Implementation defined behavior (IMPL-CCV13):
        see C11 section 6.3.2.3:5 http://rvdoc.org/C11/6.3.2.3
        see CERT section INT36-C http://rvdoc.org/CERT/INT36-C

lj_mcode.c: In function ‘mcode_alloc’:
lj_mcode.c:227:33: warning: ISO C forbids conversion of function pointer to object pointer type [-Wpedantic]
   uintptr_t target = (uintptr_t)(void *)lj_vm_exit_handler & ~(uintptr_t)0xffff;
                                 ^
lj_mcode.c:103:3: warning: Conversion from an integer to non-null pointer.

    Implementation defined behavior (IMPL-CCV13):
        see C11 section 6.3.2.3:5 http://rvdoc.org/C11/6.3.2.3
        see CERT section INT36-C http://rvdoc.org/CERT/INT36-C

lj_mcode.c: In function ‘mcode_alloc’:
lj_mcode.c:227:33: warning: ISO C forbids conversion of function pointer to object pointer type [-Wpedantic]
   uintptr_t target = (uintptr_t)(void *)lj_vm_exit_handler & ~(uintptr_t)0xffff;
                                 ^
CC        lj_snap.o
lj_target_x86.h:191:1: error: Signed integer overflow.

    Undefined behavior (UB-CCV1):
        see C11 section 6.5:5 http://rvdoc.org/C11/6.5
        see C11 section J.2:1 item 36 http://rvdoc.org/C11/J.2
        see CERT-C section INT32-C http://rvdoc.org/CERT-C/INT32-C
        see MISRA-C section 8.1:3 http://rvdoc.org/MISRA-C/8.1

lj_target_x86.h:191:1: error: Enum initializer outside the range representable by int.

    Constraint violation (CV-CDE2):
        see C11 section 6.7.2.2:2 http://rvdoc.org/C11/6.7.2.2
        see CERT-C section MSC40-C http://rvdoc.org/CERT-C/MSC40-C
        see MISRA-C section 8.1:1 http://rvdoc.org/MISRA-C/8.1

lj_target_x86.h:191:1: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_target_x86.h:191:1: error: Potential negative zero produced via bitwise operations, undefined under sign and magnitude or one's complement arithmetic, implementation-defined otherwise.

    Implementation-dependent undefined behavior (IMPLUB-CEB12):
        see C11 section 6.2.6.2:4 http://rvdoc.org/C11/6.2.6.2
        see C11 section J.2:1 item 14 http://rvdoc.org/C11/J.2
        see CERT-C section INT13-C http://rvdoc.org/CERT-C/INT13-C
        see CERT-C section MSC15-C http://rvdoc.org/CERT-C/MSC15-C
        see MISRA-C section 8.1:3 http://rvdoc.org/MISRA-C/8.1

In file included from lj_target.h:138:0,
                 from lj_snap.c:23:
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:230:12: note: in expansion of macro ‘XO_’
   XO_MOV = XO_(8b),
            ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:231:14: note: in expansion of macro ‘XO_’
   XO_MOVto = XO_(89),
              ^
lj_target_x86.h:182:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_66(o) ((uint32_t)(0x6600fd + (0x##o<<24)))
                  ^
lj_target_x86.h:232:15: note: in expansion of macro ‘XO_66’
   XO_MOVtow = XO_66(89),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:233:15: note: in expansion of macro ‘XO_’
   XO_MOVtob = XO_(88),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:234:14: note: in expansion of macro ‘XO_’
   XO_MOVmi = XO_(c7),
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:235:15: note: in expansion of macro ‘XO_’
   XO_MOVmib = XO_(c6),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:236:12: note: in expansion of macro ‘XO_’
   XO_LEA = XO_(8d),
            ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:237:16: note: in expansion of macro ‘XO_’
   XO_ARITHib = XO_(80),
                ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:238:15: note: in expansion of macro ‘XO_’
   XO_ARITHi = XO_(81),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:239:16: note: in expansion of macro ‘XO_’
   XO_ARITHi8 = XO_(83),
                ^
lj_target_x86.h:182:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_66(o) ((uint32_t)(0x6600fd + (0x##o<<24)))
                  ^
lj_target_x86.h:240:17: note: in expansion of macro ‘XO_66’
   XO_ARITHiw8 = XO_66(83),
                 ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:241:15: note: in expansion of macro ‘XO_’
   XO_SHIFTi = XO_(c1),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:242:15: note: in expansion of macro ‘XO_’
   XO_SHIFT1 = XO_(d1),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:243:16: note: in expansion of macro ‘XO_’
   XO_SHIFTcl = XO_(d3),
                ^
lj_target_x86.h:181:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_0f(o) ((uint32_t)(0x0f00fd + (0x##o<<24)))
                  ^
lj_target_x86.h:244:13: note: in expansion of macro ‘XO_0f’
   XO_IMUL = XO_0f(af),
             ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:248:14: note: in expansion of macro ‘XO_’
   XO_TESTb = XO_(84),
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:249:13: note: in expansion of macro ‘XO_’
   XO_TEST = XO_(85),
             ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:250:16: note: in expansion of macro ‘XO_’
   XO_GROUP3b = XO_(f6),
                ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:251:15: note: in expansion of macro ‘XO_’
   XO_GROUP3 = XO_(f7),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:252:16: note: in expansion of macro ‘XO_’
   XO_GROUP5b = XO_(fe),
                ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:253:15: note: in expansion of macro ‘XO_’
   XO_GROUP5 = XO_(ff),
               ^
lj_target_x86.h:181:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_0f(o) ((uint32_t)(0x0f00fd + (0x##o<<24)))
                  ^
lj_target_x86.h:254:15: note: in expansion of macro ‘XO_0f’
   XO_MOVZXb = XO_0f(b6),
               ^
lj_target_x86.h:181:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_0f(o) ((uint32_t)(0x0f00fd + (0x##o<<24)))
                  ^
lj_target_x86.h:255:15: note: in expansion of macro ‘XO_0f’
   XO_MOVZXw = XO_0f(b7),
               ^
lj_target_x86.h:181:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_0f(o) ((uint32_t)(0x0f00fd + (0x##o<<24)))
                  ^
lj_target_x86.h:256:15: note: in expansion of macro ‘XO_0f’
   XO_MOVSXb = XO_0f(be),
               ^
lj_target_x86.h:181:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_0f(o) ((uint32_t)(0x0f00fd + (0x##o<<24)))
                  ^
lj_target_x86.h:257:15: note: in expansion of macro ‘XO_0f’
   XO_MOVSXw = XO_0f(bf),
               ^
lj_target_x86.h:181:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_0f(o) ((uint32_t)(0x0f00fd + (0x##o<<24)))
                  ^
lj_target_x86.h:259:14: note: in expansion of macro ‘XO_0f’
   XO_BSWAP = XO_0f(c8),
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:291:13: note: in expansion of macro ‘XO_’
   XO_FLDd = XO_(d9), XOg_FLDd = 0,
             ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:292:13: note: in expansion of macro ‘XO_’
   XO_FLDq = XO_(dd), XOg_FLDq = 0,
             ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:293:14: note: in expansion of macro ‘XO_’
   XO_FILDd = XO_(db), XOg_FILDd = 0,
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:294:14: note: in expansion of macro ‘XO_’
   XO_FILDq = XO_(df), XOg_FILDq = 5,
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:295:14: note: in expansion of macro ‘XO_’
   XO_FSTPd = XO_(d9), XOg_FSTPd = 3,
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:296:14: note: in expansion of macro ‘XO_’
   XO_FSTPq = XO_(dd), XOg_FSTPq = 3,
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:297:15: note: in expansion of macro ‘XO_’
   XO_FISTPq = XO_(df), XOg_FISTPq = 7,
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:298:16: note: in expansion of macro ‘XO_’
   XO_FISTTPq = XO_(dd), XOg_FISTTPq = 1,
                ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:299:14: note: in expansion of macro ‘XO_’
   XO_FADDq = XO_(dc), XOg_FADDq = 0,
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:300:14: note: in expansion of macro ‘XO_’
   XO_FLDCW = XO_(d9), XOg_FLDCW = 5,
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:301:15: note: in expansion of macro ‘XO_’
   XO_FNSTCW = XO_(d9), XOg_FNSTCW = 7
               ^
lj_target_x86.h:191:1: error: Signed integer overflow.

    Undefined behavior (UB-CCV1):
        see C11 section 6.5:5 http://rvdoc.org/C11/6.5
        see C11 section J.2:1 item 36 http://rvdoc.org/C11/J.2
        see CERT-C section INT32-C http://rvdoc.org/CERT-C/INT32-C
        see MISRA-C section 8.1:3 http://rvdoc.org/MISRA-C/8.1

lj_target_x86.h:191:1: error: Enum initializer outside the range representable by int.

    Constraint violation (CV-CDE2):
        see C11 section 6.7.2.2:2 http://rvdoc.org/C11/6.7.2.2
        see CERT-C section MSC40-C http://rvdoc.org/CERT-C/MSC40-C
        see MISRA-C section 8.1:1 http://rvdoc.org/MISRA-C/8.1

lj_target_x86.h:191:1: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_target_x86.h:191:1: error: Potential negative zero produced via bitwise operations, undefined under sign and magnitude or one's complement arithmetic, implementation-defined otherwise.

    Implementation-dependent undefined behavior (IMPLUB-CEB12):
        see C11 section 6.2.6.2:4 http://rvdoc.org/C11/6.2.6.2
        see C11 section J.2:1 item 14 http://rvdoc.org/C11/J.2
        see CERT-C section INT13-C http://rvdoc.org/CERT-C/INT13-C
        see CERT-C section MSC15-C http://rvdoc.org/CERT-C/MSC15-C
        see MISRA-C section 8.1:3 http://rvdoc.org/MISRA-C/8.1

In file included from lj_target.h:138:0,
                 from lj_snap.c:23:
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:230:12: note: in expansion of macro ‘XO_’
   XO_MOV = XO_(8b),
            ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:231:14: note: in expansion of macro ‘XO_’
   XO_MOVto = XO_(89),
              ^
lj_target_x86.h:182:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_66(o) ((uint32_t)(0x6600fd + (0x##o<<24)))
                  ^
lj_target_x86.h:232:15: note: in expansion of macro ‘XO_66’
   XO_MOVtow = XO_66(89),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:233:15: note: in expansion of macro ‘XO_’
   XO_MOVtob = XO_(88),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:234:14: note: in expansion of macro ‘XO_’
   XO_MOVmi = XO_(c7),
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:235:15: note: in expansion of macro ‘XO_’
   XO_MOVmib = XO_(c6),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:236:12: note: in expansion of macro ‘XO_’
   XO_LEA = XO_(8d),
            ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:237:16: note: in expansion of macro ‘XO_’
   XO_ARITHib = XO_(80),
                ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:238:15: note: in expansion of macro ‘XO_’
   XO_ARITHi = XO_(81),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:239:16: note: in expansion of macro ‘XO_’
   XO_ARITHi8 = XO_(83),
                ^
lj_target_x86.h:182:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_66(o) ((uint32_t)(0x6600fd + (0x##o<<24)))
                  ^
lj_target_x86.h:240:17: note: in expansion of macro ‘XO_66’
   XO_ARITHiw8 = XO_66(83),
                 ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:241:15: note: in expansion of macro ‘XO_’
   XO_SHIFTi = XO_(c1),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:242:15: note: in expansion of macro ‘XO_’
   XO_SHIFT1 = XO_(d1),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:243:16: note: in expansion of macro ‘XO_’
   XO_SHIFTcl = XO_(d3),
                ^
lj_target_x86.h:181:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_0f(o) ((uint32_t)(0x0f00fd + (0x##o<<24)))
                  ^
lj_target_x86.h:244:13: note: in expansion of macro ‘XO_0f’
   XO_IMUL = XO_0f(af),
             ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:248:14: note: in expansion of macro ‘XO_’
   XO_TESTb = XO_(84),
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:249:13: note: in expansion of macro ‘XO_’
   XO_TEST = XO_(85),
             ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:250:16: note: in expansion of macro ‘XO_’
   XO_GROUP3b = XO_(f6),
                ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:251:15: note: in expansion of macro ‘XO_’
   XO_GROUP3 = XO_(f7),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:252:16: note: in expansion of macro ‘XO_’
   XO_GROUP5b = XO_(fe),
                ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:253:15: note: in expansion of macro ‘XO_’
   XO_GROUP5 = XO_(ff),
               ^
lj_target_x86.h:181:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_0f(o) ((uint32_t)(0x0f00fd + (0x##o<<24)))
                  ^
lj_target_x86.h:254:15: note: in expansion of macro ‘XO_0f’
   XO_MOVZXb = XO_0f(b6),
               ^
lj_target_x86.h:181:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_0f(o) ((uint32_t)(0x0f00fd + (0x##o<<24)))
                  ^
lj_target_x86.h:255:15: note: in expansion of macro ‘XO_0f’
   XO_MOVZXw = XO_0f(b7),
               ^
lj_target_x86.h:181:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_0f(o) ((uint32_t)(0x0f00fd + (0x##o<<24)))
                  ^
lj_target_x86.h:256:15: note: in expansion of macro ‘XO_0f’
   XO_MOVSXb = XO_0f(be),
               ^
lj_target_x86.h:181:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_0f(o) ((uint32_t)(0x0f00fd + (0x##o<<24)))
                  ^
lj_target_x86.h:257:15: note: in expansion of macro ‘XO_0f’
   XO_MOVSXw = XO_0f(bf),
               ^
lj_target_x86.h:181:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_0f(o) ((uint32_t)(0x0f00fd + (0x##o<<24)))
                  ^
lj_target_x86.h:259:14: note: in expansion of macro ‘XO_0f’
   XO_BSWAP = XO_0f(c8),
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:291:13: note: in expansion of macro ‘XO_’
   XO_FLDd = XO_(d9), XOg_FLDd = 0,
             ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:292:13: note: in expansion of macro ‘XO_’
   XO_FLDq = XO_(dd), XOg_FLDq = 0,
             ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:293:14: note: in expansion of macro ‘XO_’
   XO_FILDd = XO_(db), XOg_FILDd = 0,
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:294:14: note: in expansion of macro ‘XO_’
   XO_FILDq = XO_(df), XOg_FILDq = 5,
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:295:14: note: in expansion of macro ‘XO_’
   XO_FSTPd = XO_(d9), XOg_FSTPd = 3,
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:296:14: note: in expansion of macro ‘XO_’
   XO_FSTPq = XO_(dd), XOg_FSTPq = 3,
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:297:15: note: in expansion of macro ‘XO_’
   XO_FISTPq = XO_(df), XOg_FISTPq = 7,
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:298:16: note: in expansion of macro ‘XO_’
   XO_FISTTPq = XO_(dd), XOg_FISTTPq = 1,
                ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:299:14: note: in expansion of macro ‘XO_’
   XO_FADDq = XO_(dc), XOg_FADDq = 0,
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:300:14: note: in expansion of macro ‘XO_’
   XO_FLDCW = XO_(d9), XOg_FLDCW = 5,
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:301:15: note: in expansion of macro ‘XO_’
   XO_FNSTCW = XO_(d9), XOg_FNSTCW = 7
               ^
CC        lj_record.o
lj_record.c:372:7: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

In file included from lj_record.c:17:0:
lj_record.c: In function ‘lj_record_ret’:
lj_frame.h:40:4: warning: ISO C forbids conversion of object pointer to function pointer type [-Wpedantic]
   ((ASMFunction)(void *)((intptr_t)lj_vm_asm_begin + \
    ^
lj_record.c:764:24: note: in expansion of macro ‘frame_contf’
     ASMFunction cont = frame_contf(frame);
                        ^
In file included from lj_record.c:9:0:
lj_record.c: In function ‘rec_mm_prep’:
lj_obj.h:734:25: warning: ISO C forbids conversion of function pointer to object pointer type [-Wpedantic]
   ((o)->u64 = (uint64_t)(void *)(f) - (uint64_t)lj_vm_asm_begin)
                         ^
lj_record.c:797:3: note: in expansion of macro ‘setcont’
   setcont(&J->L->base[top], cont);
   ^
lj_record.c:372:7: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

In file included from lj_record.c:17:0:
lj_record.c: In function ‘lj_record_ret’:
lj_frame.h:40:4: warning: ISO C forbids conversion of object pointer to function pointer type [-Wpedantic]
   ((ASMFunction)(void *)((intptr_t)lj_vm_asm_begin + \
    ^
lj_record.c:764:24: note: in expansion of macro ‘frame_contf’
     ASMFunction cont = frame_contf(frame);
                        ^
In file included from lj_record.c:9:0:
lj_record.c: In function ‘rec_mm_prep’:
lj_obj.h:734:25: warning: ISO C forbids conversion of function pointer to object pointer type [-Wpedantic]
   ((o)->u64 = (uint64_t)(void *)(f) - (uint64_t)lj_vm_asm_begin)
                         ^
lj_record.c:797:3: note: in expansion of macro ‘setcont’
   setcont(&J->L->base[top], cont);
   ^
CC        lj_crecord.o
lj_crecord.c:106:7: error: Trying to look up identifier __builtin_clz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_crecord.c:185:24: error: Trying to look up identifier __builtin_clz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_crecord.c:279:3: error: Trying to look up identifier __builtin_clz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_crecord.c:368:3: warning: Conversion from an integer to non-null pointer.

    Implementation defined behavior (IMPL-CCV13):
        see C11 section 6.3.2.3:5 http://rvdoc.org/C11/6.3.2.3
        see CERT section INT36-C http://rvdoc.org/CERT/INT36-C

lj_crecord.c:877:6: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_crecord.c:881:6: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_crecord.c:1276:2: error: Trying to look up identifier __builtin_clz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_crecord.c:106:7: error: Trying to look up identifier __builtin_clz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_crecord.c:185:24: error: Trying to look up identifier __builtin_clz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_crecord.c:279:3: error: Trying to look up identifier __builtin_clz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_crecord.c:368:3: warning: Conversion from an integer to non-null pointer.

    Implementation defined behavior (IMPL-CCV13):
        see C11 section 6.3.2.3:5 http://rvdoc.org/C11/6.3.2.3
        see CERT section INT36-C http://rvdoc.org/CERT/INT36-C

lj_crecord.c:877:6: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_crecord.c:881:6: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_crecord.c:1276:2: error: Trying to look up identifier __builtin_clz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

BUILDVM   lj_recdef.h
CC        lj_ffrecord.o
CC        lj_asm.o
lj_target_x86.h:191:1: error: Signed integer overflow.

    Undefined behavior (UB-CCV1):
        see C11 section 6.5:5 http://rvdoc.org/C11/6.5
        see C11 section J.2:1 item 36 http://rvdoc.org/C11/J.2
        see CERT-C section INT32-C http://rvdoc.org/CERT-C/INT32-C
        see MISRA-C section 8.1:3 http://rvdoc.org/MISRA-C/8.1

lj_target_x86.h:191:1: error: Enum initializer outside the range representable by int.

    Constraint violation (CV-CDE2):
        see C11 section 6.7.2.2:2 http://rvdoc.org/C11/6.7.2.2
        see CERT-C section MSC40-C http://rvdoc.org/CERT-C/MSC40-C
        see MISRA-C section 8.1:1 http://rvdoc.org/MISRA-C/8.1

lj_target_x86.h:191:1: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_target_x86.h:191:1: error: Potential negative zero produced via bitwise operations, undefined under sign and magnitude or one's complement arithmetic, implementation-defined otherwise.

    Implementation-dependent undefined behavior (IMPLUB-CEB12):
        see C11 section 6.2.6.2:4 http://rvdoc.org/C11/6.2.6.2
        see C11 section J.2:1 item 14 http://rvdoc.org/C11/J.2
        see CERT-C section INT13-C http://rvdoc.org/CERT-C/INT13-C
        see CERT-C section MSC15-C http://rvdoc.org/CERT-C/MSC15-C
        see MISRA-C section 8.1:3 http://rvdoc.org/MISRA-C/8.1

lj_emit_x86.h:252:3: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_emit_x86.h:301:5: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_emit_x86.h:404:5: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_emit_x86.h:430:5: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_emit_x86.h:439:5: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_emit_x86.h:448:5: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_emit_x86.h:458:7: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm.c:336:5: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm.c:339:5: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm.c:428:5: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm.c:438:7: error: Trying to look up identifier __builtin_ctz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_asm.c:450:5: error: Trying to look up identifier __builtin_clz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_asm.c:470:5: error: Trying to look up identifier __builtin_ctz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_asm.c:478:5: error: Trying to look up identifier __builtin_ctz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_asm.c:492:5: error: Trying to look up identifier __builtin_ctz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_asm.c:503:5: error: Trying to look up identifier __builtin_ctz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_asm.c:587:7: error: Trying to look up identifier __builtin_ctz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_asm.c:592:7: error: Trying to look up identifier __builtin_clz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_asm.c:1066:3: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm.c:1083:5: error: Trying to look up identifier __builtin_clz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_asm.c:1116:7: error: Trying to look up identifier __builtin_ctz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_asm.c:1152:5: error: Trying to look up identifier __builtin_ctz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_asm.c:1160:5: error: Trying to look up identifier __builtin_ctz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_asm.c:1169:5: error: Trying to look up identifier __builtin_clz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_asm.c:1196:7: error: Trying to look up identifier __builtin_ctz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_asm.c:1223:7: error: Trying to look up identifier __builtin_ctz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_asm.c:1247:5: error: Trying to look up identifier __builtin_clz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_asm_x86.h:32:3: error: Conversion to a pointer type with a stricter alignment requirement (possibly undefined).

    Undefined behavior (UB-CCV11):
        see C11 section 6.3.2.3:7 http://rvdoc.org/C11/6.3.2.3
        see C11 section J.2:1 item 25 http://rvdoc.org/C11/J.2
        see CERT-C section EXP36-C http://rvdoc.org/CERT-C/EXP36-C
        see MISRA-C section 8.1:3 http://rvdoc.org/MISRA-C/8.1

lj_asm_x86.h:519:2: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:553:11: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:641:5: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:659:3: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:727:2: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:751:4: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:760:2: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:766:4: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:779:7: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:781:7: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:783:7: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:785:7: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:792:7: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:816:2: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:921:3: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:926:3: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:941:5: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:958:5: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:960:5: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1019:3: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1020:3: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1043:7: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1065:5: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1073:5: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1080:9: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1081:7: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1085:7: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1088:7: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1092:9: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1094:9: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1096:9: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1101:4: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1102:2: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1109:2: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1110:2: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1132:2: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1134:7: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1151:5: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1201:7: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1206:7: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1222:5: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1227:7: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1230:7: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1232:7: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1234:5: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1243:3: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1255:5: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1270:16: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1271:16: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1272:17: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1273:17: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1281:5: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1317:31: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1318:33: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1329:7: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1335:7: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1340:7: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1345:7: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1359:7: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1360:9: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1361:7: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1379:7: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1398:5: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1401:5: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1417:5: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1429:7: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1433:7: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1437:5: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1461:7: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1476:7: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1489:7: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1492:7: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1526:2: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1528:2: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1533:7: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1557:3: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1561:3: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1577:3: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1578:3: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1579:3: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1581:3: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1584:3: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1606:5: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1609:5: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1613:3: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1630:7: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1634:5: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1636:5: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1655:7: error: Conversion to a pointer type with a stricter alignment requirement (possibly undefined).

    Undefined behavior (UB-CCV11):
        see C11 section 6.3.2.3:7 http://rvdoc.org/C11/6.3.2.3
        see C11 section J.2:1 item 25 http://rvdoc.org/C11/J.2
        see CERT-C section EXP36-C http://rvdoc.org/CERT-C/EXP36-C
        see MISRA-C section 8.1:3 http://rvdoc.org/MISRA-C/8.1

lj_asm_x86.h:1710:5: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1712:21: error: Conversion to a pointer type with a stricter alignment requirement (possibly undefined).

    Undefined behavior (UB-CCV11):
        see C11 section 6.3.2.3:7 http://rvdoc.org/C11/6.3.2.3
        see C11 section J.2:1 item 25 http://rvdoc.org/C11/J.2
        see CERT-C section EXP36-C http://rvdoc.org/CERT-C/EXP36-C
        see MISRA-C section 8.1:3 http://rvdoc.org/MISRA-C/8.1

lj_asm_x86.h:1713:22: error: Conversion to a pointer type with a stricter alignment requirement (possibly undefined).

    Undefined behavior (UB-CCV11):
        see C11 section 6.3.2.3:7 http://rvdoc.org/C11/6.3.2.3
        see C11 section J.2:1 item 25 http://rvdoc.org/C11/J.2
        see CERT-C section EXP36-C http://rvdoc.org/CERT-C/EXP36-C
        see MISRA-C section 8.1:3 http://rvdoc.org/MISRA-C/8.1

lj_asm_x86.h:1755:3: error: Conversion to a pointer type with a stricter alignment requirement (possibly undefined).

    Undefined behavior (UB-CCV11):
        see C11 section 6.3.2.3:7 http://rvdoc.org/C11/6.3.2.3
        see C11 section J.2:1 item 25 http://rvdoc.org/C11/J.2
        see CERT-C section EXP36-C http://rvdoc.org/CERT-C/EXP36-C
        see MISRA-C section 8.1:3 http://rvdoc.org/MISRA-C/8.1

lj_asm_x86.h:1867:5: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1949:3: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1965:3: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1999:13: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:2000:16: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:2007:7: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:2014:5: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:2017:7: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:2131:6: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:2142:4: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:2144:4: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:2179:4: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:2182:6: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:2188:3: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:2354:3: error: Trying to look up identifier __builtin_ctz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_asm_x86.h:2357:5: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:2366:3: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:2367:3: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:2369:5: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:2395:2: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:2425:3: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:2435:3: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:2499:7: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:2516:7: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:2518:7: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:2562:3: error: Conversion to a pointer type with a stricter alignment requirement (possibly undefined).

    Undefined behavior (UB-CCV11):
        see C11 section 6.3.2.3:7 http://rvdoc.org/C11/6.3.2.3
        see C11 section J.2:1 item 25 http://rvdoc.org/C11/J.2
        see CERT-C section EXP36-C http://rvdoc.org/CERT-C/EXP36-C
        see MISRA-C section 8.1:3 http://rvdoc.org/MISRA-C/8.1

lj_asm.c:1349:5: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm.c:1452:5: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm.c:1465:7: error: Trying to look up identifier __builtin_ctz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_asm.c:1484:7: error: Trying to look up identifier __builtin_ctz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_asm.c:1502:7: error: Trying to look up identifier __builtin_ctz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_asm.c:1508:7: error: Trying to look up identifier __builtin_ctz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_asm.c:1580:5: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

In file included from lj_target.h:138:0,
                 from lj_asm.c:31:
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:230:12: note: in expansion of macro ‘XO_’
   XO_MOV = XO_(8b),
            ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:231:14: note: in expansion of macro ‘XO_’
   XO_MOVto = XO_(89),
              ^
lj_target_x86.h:182:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_66(o) ((uint32_t)(0x6600fd + (0x##o<<24)))
                  ^
lj_target_x86.h:232:15: note: in expansion of macro ‘XO_66’
   XO_MOVtow = XO_66(89),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:233:15: note: in expansion of macro ‘XO_’
   XO_MOVtob = XO_(88),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:234:14: note: in expansion of macro ‘XO_’
   XO_MOVmi = XO_(c7),
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:235:15: note: in expansion of macro ‘XO_’
   XO_MOVmib = XO_(c6),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:236:12: note: in expansion of macro ‘XO_’
   XO_LEA = XO_(8d),
            ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:237:16: note: in expansion of macro ‘XO_’
   XO_ARITHib = XO_(80),
                ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:238:15: note: in expansion of macro ‘XO_’
   XO_ARITHi = XO_(81),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:239:16: note: in expansion of macro ‘XO_’
   XO_ARITHi8 = XO_(83),
                ^
lj_target_x86.h:182:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_66(o) ((uint32_t)(0x6600fd + (0x##o<<24)))
                  ^
lj_target_x86.h:240:17: note: in expansion of macro ‘XO_66’
   XO_ARITHiw8 = XO_66(83),
                 ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:241:15: note: in expansion of macro ‘XO_’
   XO_SHIFTi = XO_(c1),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:242:15: note: in expansion of macro ‘XO_’
   XO_SHIFT1 = XO_(d1),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:243:16: note: in expansion of macro ‘XO_’
   XO_SHIFTcl = XO_(d3),
                ^
lj_target_x86.h:181:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_0f(o) ((uint32_t)(0x0f00fd + (0x##o<<24)))
                  ^
lj_target_x86.h:244:13: note: in expansion of macro ‘XO_0f’
   XO_IMUL = XO_0f(af),
             ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:248:14: note: in expansion of macro ‘XO_’
   XO_TESTb = XO_(84),
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:249:13: note: in expansion of macro ‘XO_’
   XO_TEST = XO_(85),
             ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:250:16: note: in expansion of macro ‘XO_’
   XO_GROUP3b = XO_(f6),
                ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:251:15: note: in expansion of macro ‘XO_’
   XO_GROUP3 = XO_(f7),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:252:16: note: in expansion of macro ‘XO_’
   XO_GROUP5b = XO_(fe),
                ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:253:15: note: in expansion of macro ‘XO_’
   XO_GROUP5 = XO_(ff),
               ^
lj_target_x86.h:181:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_0f(o) ((uint32_t)(0x0f00fd + (0x##o<<24)))
                  ^
lj_target_x86.h:254:15: note: in expansion of macro ‘XO_0f’
   XO_MOVZXb = XO_0f(b6),
               ^
lj_target_x86.h:181:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_0f(o) ((uint32_t)(0x0f00fd + (0x##o<<24)))
                  ^
lj_target_x86.h:255:15: note: in expansion of macro ‘XO_0f’
   XO_MOVZXw = XO_0f(b7),
               ^
lj_target_x86.h:181:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_0f(o) ((uint32_t)(0x0f00fd + (0x##o<<24)))
                  ^
lj_target_x86.h:256:15: note: in expansion of macro ‘XO_0f’
   XO_MOVSXb = XO_0f(be),
               ^
lj_target_x86.h:181:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_0f(o) ((uint32_t)(0x0f00fd + (0x##o<<24)))
                  ^
lj_target_x86.h:257:15: note: in expansion of macro ‘XO_0f’
   XO_MOVSXw = XO_0f(bf),
               ^
lj_target_x86.h:181:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_0f(o) ((uint32_t)(0x0f00fd + (0x##o<<24)))
                  ^
lj_target_x86.h:259:14: note: in expansion of macro ‘XO_0f’
   XO_BSWAP = XO_0f(c8),
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:291:13: note: in expansion of macro ‘XO_’
   XO_FLDd = XO_(d9), XOg_FLDd = 0,
             ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:292:13: note: in expansion of macro ‘XO_’
   XO_FLDq = XO_(dd), XOg_FLDq = 0,
             ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:293:14: note: in expansion of macro ‘XO_’
   XO_FILDd = XO_(db), XOg_FILDd = 0,
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:294:14: note: in expansion of macro ‘XO_’
   XO_FILDq = XO_(df), XOg_FILDq = 5,
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:295:14: note: in expansion of macro ‘XO_’
   XO_FSTPd = XO_(d9), XOg_FSTPd = 3,
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:296:14: note: in expansion of macro ‘XO_’
   XO_FSTPq = XO_(dd), XOg_FSTPq = 3,
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:297:15: note: in expansion of macro ‘XO_’
   XO_FISTPq = XO_(df), XOg_FISTPq = 7,
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:298:16: note: in expansion of macro ‘XO_’
   XO_FISTTPq = XO_(dd), XOg_FISTTPq = 1,
                ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:299:14: note: in expansion of macro ‘XO_’
   XO_FADDq = XO_(dc), XOg_FADDq = 0,
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:300:14: note: in expansion of macro ‘XO_’
   XO_FLDCW = XO_(d9), XOg_FLDCW = 5,
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:301:15: note: in expansion of macro ‘XO_’
   XO_FNSTCW = XO_(d9), XOg_FNSTCW = 7
               ^
In file included from lj_asm.c:1331:0:
lj_asm_x86.h: In function ‘asm_exitstub_gen’:
lj_asm_x86.h:32:48: warning: ISO C forbids conversion of function pointer to object pointer type [-Wpedantic]
   *((int32_t *)(mxp-4)) = jmprel(mxp, (MCode *)(void *)lj_vm_exit_handler);
                                                ^
lj_asm_x86.h: In function ‘asm_gencall’:
lj_asm_x86.h:445:7: warning: ISO C forbids conversion of function pointer to object pointer type [-Wpedantic]
   if ((void *)ci->func)
       ^
In file included from lj_asm.c:171:0:
lj_emit_x86.h:414:50: warning: ISO C forbids conversion of function pointer to object pointer type [-Wpedantic]
 #define emit_call(as, f) emit_call_(as, (MCode *)(void *)(f))
                                                  ^
lj_asm_x86.h:446:5: note: in expansion of macro ‘emit_call’
     emit_call(as, ci->func);
     ^
In file included from lj_asm.c:1331:0:
lj_asm_x86.h: In function ‘asm_callx’:
lj_asm_x86.h:635:13: warning: ISO C forbids conversion of object pointer to function pointer type [-Wpedantic]
   ci.func = (ASMFunction)asm_callx_func(as, irf, func);
             ^
lj_asm_x86.h:636:8: warning: ISO C forbids conversion of function pointer to object pointer type [-Wpedantic]
   if (!(void *)ci.func) {
        ^
In file included from lj_asm.c:171:0:
lj_asm_x86.h: In function ‘fpmjoin_pow’:
lj_emit_x86.h:414:50: warning: ISO C forbids conversion of function pointer to object pointer type [-Wpedantic]
 #define emit_call(as, f) emit_call_(as, (MCode *)(void *)(f))
                                                  ^
lj_asm_x86.h:1655:7: note: in expansion of macro ‘emit_call’
       emit_call(as, lj_vm_pow_sse);
       ^
lj_asm_x86.h: In function ‘asm_fpmath’:
lj_emit_x86.h:414:50: warning: ISO C forbids conversion of function pointer to object pointer type [-Wpedantic]
 #define emit_call(as, f) emit_call_(as, (MCode *)(void *)(f))
                                                  ^
lj_asm_x86.h:1696:7: note: in expansion of macro ‘emit_call’
       emit_call(as, fpm == IRFPM_FLOOR ? lj_vm_floor_sse :
       ^
lj_emit_x86.h:414:50: warning: ISO C forbids conversion of function pointer to object pointer type [-Wpedantic]
 #define emit_call(as, f) emit_call_(as, (MCode *)(void *)(f))
                                                  ^
lj_asm_x86.h:1712:21: note: in expansion of macro ‘emit_call’
     case IRFPM_EXP: emit_call(as, lj_vm_exp_x87); break;
                     ^
lj_emit_x86.h:414:50: warning: ISO C forbids conversion of function pointer to object pointer type [-Wpedantic]
 #define emit_call(as, f) emit_call_(as, (MCode *)(void *)(f))
                                                  ^
lj_asm_x86.h:1713:22: note: in expansion of macro ‘emit_call’
     case IRFPM_EXP2: emit_call(as, lj_vm_exp2_x87); break;
                      ^
lj_asm_x86.h: In function ‘asm_fppowi’:
lj_emit_x86.h:414:50: warning: ISO C forbids conversion of function pointer to object pointer type [-Wpedantic]
 #define emit_call(as, f) emit_call_(as, (MCode *)(void *)(f))
                                                  ^
lj_asm_x86.h:1755:3: note: in expansion of macro ‘emit_call’
   emit_call(as, lj_vm_powi_sse);
   ^
In file included from lj_asm.c:1331:0:
lj_asm_x86.h: In function ‘asm_tail_fixup’:
lj_asm_x86.h:2562:48: warning: ISO C forbids conversion of function pointer to object pointer type [-Wpedantic]
   target = lnk ? traceref(as->J, lnk)->mcode : (MCode *)lj_vm_exit_interp;
                                                ^
lj_target_x86.h:191:1: error: Signed integer overflow.

    Undefined behavior (UB-CCV1):
        see C11 section 6.5:5 http://rvdoc.org/C11/6.5
        see C11 section J.2:1 item 36 http://rvdoc.org/C11/J.2
        see CERT-C section INT32-C http://rvdoc.org/CERT-C/INT32-C
        see MISRA-C section 8.1:3 http://rvdoc.org/MISRA-C/8.1

lj_target_x86.h:191:1: error: Enum initializer outside the range representable by int.

    Constraint violation (CV-CDE2):
        see C11 section 6.7.2.2:2 http://rvdoc.org/C11/6.7.2.2
        see CERT-C section MSC40-C http://rvdoc.org/CERT-C/MSC40-C
        see MISRA-C section 8.1:1 http://rvdoc.org/MISRA-C/8.1

lj_target_x86.h:191:1: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_target_x86.h:191:1: error: Potential negative zero produced via bitwise operations, undefined under sign and magnitude or one's complement arithmetic, implementation-defined otherwise.

    Implementation-dependent undefined behavior (IMPLUB-CEB12):
        see C11 section 6.2.6.2:4 http://rvdoc.org/C11/6.2.6.2
        see C11 section J.2:1 item 14 http://rvdoc.org/C11/J.2
        see CERT-C section INT13-C http://rvdoc.org/CERT-C/INT13-C
        see CERT-C section MSC15-C http://rvdoc.org/CERT-C/MSC15-C
        see MISRA-C section 8.1:3 http://rvdoc.org/MISRA-C/8.1

lj_emit_x86.h:252:3: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_emit_x86.h:301:5: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_emit_x86.h:404:5: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_emit_x86.h:430:5: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_emit_x86.h:439:5: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_emit_x86.h:448:5: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_emit_x86.h:458:7: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm.c:336:5: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm.c:339:5: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm.c:428:5: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm.c:438:7: error: Trying to look up identifier __builtin_ctz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_asm.c:450:5: error: Trying to look up identifier __builtin_clz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_asm.c:470:5: error: Trying to look up identifier __builtin_ctz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_asm.c:478:5: error: Trying to look up identifier __builtin_ctz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_asm.c:492:5: error: Trying to look up identifier __builtin_ctz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_asm.c:503:5: error: Trying to look up identifier __builtin_ctz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_asm.c:587:7: error: Trying to look up identifier __builtin_ctz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_asm.c:592:7: error: Trying to look up identifier __builtin_clz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_asm.c:1066:3: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm.c:1083:5: error: Trying to look up identifier __builtin_clz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_asm.c:1116:7: error: Trying to look up identifier __builtin_ctz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_asm.c:1152:5: error: Trying to look up identifier __builtin_ctz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_asm.c:1160:5: error: Trying to look up identifier __builtin_ctz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_asm.c:1169:5: error: Trying to look up identifier __builtin_clz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_asm.c:1196:7: error: Trying to look up identifier __builtin_ctz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_asm.c:1223:7: error: Trying to look up identifier __builtin_ctz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_asm.c:1247:5: error: Trying to look up identifier __builtin_clz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_asm_x86.h:32:3: error: Conversion to a pointer type with a stricter alignment requirement (possibly undefined).

    Undefined behavior (UB-CCV11):
        see C11 section 6.3.2.3:7 http://rvdoc.org/C11/6.3.2.3
        see C11 section J.2:1 item 25 http://rvdoc.org/C11/J.2
        see CERT-C section EXP36-C http://rvdoc.org/CERT-C/EXP36-C
        see MISRA-C section 8.1:3 http://rvdoc.org/MISRA-C/8.1

lj_asm_x86.h:519:2: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:553:11: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:641:5: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:659:3: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:727:2: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:751:4: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:760:2: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:766:4: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:779:7: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:781:7: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:783:7: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:785:7: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:792:7: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:816:2: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:921:3: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:926:3: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:941:5: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:958:5: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:960:5: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1019:3: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1020:3: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1043:7: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1065:5: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1073:5: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1080:9: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1081:7: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1085:7: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1088:7: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1092:9: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1094:9: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1096:9: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1101:4: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1102:2: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1109:2: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1110:2: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1132:2: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1134:7: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1151:5: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1201:7: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1206:7: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1222:5: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1227:7: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1230:7: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1232:7: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1234:5: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1243:3: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1255:5: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1270:16: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1271:16: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1272:17: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1273:17: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1281:5: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1317:31: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1318:33: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1329:7: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1335:7: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1340:7: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1345:7: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1359:7: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1360:9: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1361:7: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1379:7: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1398:5: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1401:5: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1417:5: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1429:7: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1433:7: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1437:5: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1461:7: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1476:7: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1489:7: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1492:7: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1526:2: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1528:2: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1533:7: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1557:3: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1561:3: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1577:3: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1578:3: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1579:3: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1581:3: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1584:3: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1606:5: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1609:5: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1613:3: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1630:7: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1634:5: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1636:5: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1655:7: error: Conversion to a pointer type with a stricter alignment requirement (possibly undefined).

    Undefined behavior (UB-CCV11):
        see C11 section 6.3.2.3:7 http://rvdoc.org/C11/6.3.2.3
        see C11 section J.2:1 item 25 http://rvdoc.org/C11/J.2
        see CERT-C section EXP36-C http://rvdoc.org/CERT-C/EXP36-C
        see MISRA-C section 8.1:3 http://rvdoc.org/MISRA-C/8.1

lj_asm_x86.h:1710:5: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1712:21: error: Conversion to a pointer type with a stricter alignment requirement (possibly undefined).

    Undefined behavior (UB-CCV11):
        see C11 section 6.3.2.3:7 http://rvdoc.org/C11/6.3.2.3
        see C11 section J.2:1 item 25 http://rvdoc.org/C11/J.2
        see CERT-C section EXP36-C http://rvdoc.org/CERT-C/EXP36-C
        see MISRA-C section 8.1:3 http://rvdoc.org/MISRA-C/8.1

lj_asm_x86.h:1713:22: error: Conversion to a pointer type with a stricter alignment requirement (possibly undefined).

    Undefined behavior (UB-CCV11):
        see C11 section 6.3.2.3:7 http://rvdoc.org/C11/6.3.2.3
        see C11 section J.2:1 item 25 http://rvdoc.org/C11/J.2
        see CERT-C section EXP36-C http://rvdoc.org/CERT-C/EXP36-C
        see MISRA-C section 8.1:3 http://rvdoc.org/MISRA-C/8.1

lj_asm_x86.h:1755:3: error: Conversion to a pointer type with a stricter alignment requirement (possibly undefined).

    Undefined behavior (UB-CCV11):
        see C11 section 6.3.2.3:7 http://rvdoc.org/C11/6.3.2.3
        see C11 section J.2:1 item 25 http://rvdoc.org/C11/J.2
        see CERT-C section EXP36-C http://rvdoc.org/CERT-C/EXP36-C
        see MISRA-C section 8.1:3 http://rvdoc.org/MISRA-C/8.1

lj_asm_x86.h:1867:5: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1949:3: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1965:3: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:1999:13: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:2000:16: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:2007:7: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:2014:5: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:2017:7: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:2131:6: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:2142:4: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:2144:4: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:2179:4: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:2182:6: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:2188:3: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:2354:3: error: Trying to look up identifier __builtin_ctz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_asm_x86.h:2357:5: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:2366:3: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:2367:3: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:2369:5: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:2395:2: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:2425:3: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:2435:3: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:2499:7: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:2516:7: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:2518:7: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm_x86.h:2562:3: error: Conversion to a pointer type with a stricter alignment requirement (possibly undefined).

    Undefined behavior (UB-CCV11):
        see C11 section 6.3.2.3:7 http://rvdoc.org/C11/6.3.2.3
        see C11 section J.2:1 item 25 http://rvdoc.org/C11/J.2
        see CERT-C section EXP36-C http://rvdoc.org/CERT-C/EXP36-C
        see MISRA-C section 8.1:3 http://rvdoc.org/MISRA-C/8.1

lj_asm.c:1349:5: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm.c:1452:5: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_asm.c:1465:7: error: Trying to look up identifier __builtin_ctz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_asm.c:1484:7: error: Trying to look up identifier __builtin_ctz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_asm.c:1502:7: error: Trying to look up identifier __builtin_ctz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_asm.c:1508:7: error: Trying to look up identifier __builtin_ctz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_asm.c:1580:5: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

In file included from lj_target.h:138:0,
                 from lj_asm.c:31:
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:230:12: note: in expansion of macro ‘XO_’
   XO_MOV = XO_(8b),
            ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:231:14: note: in expansion of macro ‘XO_’
   XO_MOVto = XO_(89),
              ^
lj_target_x86.h:182:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_66(o) ((uint32_t)(0x6600fd + (0x##o<<24)))
                  ^
lj_target_x86.h:232:15: note: in expansion of macro ‘XO_66’
   XO_MOVtow = XO_66(89),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:233:15: note: in expansion of macro ‘XO_’
   XO_MOVtob = XO_(88),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:234:14: note: in expansion of macro ‘XO_’
   XO_MOVmi = XO_(c7),
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:235:15: note: in expansion of macro ‘XO_’
   XO_MOVmib = XO_(c6),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:236:12: note: in expansion of macro ‘XO_’
   XO_LEA = XO_(8d),
            ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:237:16: note: in expansion of macro ‘XO_’
   XO_ARITHib = XO_(80),
                ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:238:15: note: in expansion of macro ‘XO_’
   XO_ARITHi = XO_(81),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:239:16: note: in expansion of macro ‘XO_’
   XO_ARITHi8 = XO_(83),
                ^
lj_target_x86.h:182:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_66(o) ((uint32_t)(0x6600fd + (0x##o<<24)))
                  ^
lj_target_x86.h:240:17: note: in expansion of macro ‘XO_66’
   XO_ARITHiw8 = XO_66(83),
                 ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:241:15: note: in expansion of macro ‘XO_’
   XO_SHIFTi = XO_(c1),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:242:15: note: in expansion of macro ‘XO_’
   XO_SHIFT1 = XO_(d1),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:243:16: note: in expansion of macro ‘XO_’
   XO_SHIFTcl = XO_(d3),
                ^
lj_target_x86.h:181:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_0f(o) ((uint32_t)(0x0f00fd + (0x##o<<24)))
                  ^
lj_target_x86.h:244:13: note: in expansion of macro ‘XO_0f’
   XO_IMUL = XO_0f(af),
             ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:248:14: note: in expansion of macro ‘XO_’
   XO_TESTb = XO_(84),
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:249:13: note: in expansion of macro ‘XO_’
   XO_TEST = XO_(85),
             ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:250:16: note: in expansion of macro ‘XO_’
   XO_GROUP3b = XO_(f6),
                ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:251:15: note: in expansion of macro ‘XO_’
   XO_GROUP3 = XO_(f7),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:252:16: note: in expansion of macro ‘XO_’
   XO_GROUP5b = XO_(fe),
                ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:253:15: note: in expansion of macro ‘XO_’
   XO_GROUP5 = XO_(ff),
               ^
lj_target_x86.h:181:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_0f(o) ((uint32_t)(0x0f00fd + (0x##o<<24)))
                  ^
lj_target_x86.h:254:15: note: in expansion of macro ‘XO_0f’
   XO_MOVZXb = XO_0f(b6),
               ^
lj_target_x86.h:181:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_0f(o) ((uint32_t)(0x0f00fd + (0x##o<<24)))
                  ^
lj_target_x86.h:255:15: note: in expansion of macro ‘XO_0f’
   XO_MOVZXw = XO_0f(b7),
               ^
lj_target_x86.h:181:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_0f(o) ((uint32_t)(0x0f00fd + (0x##o<<24)))
                  ^
lj_target_x86.h:256:15: note: in expansion of macro ‘XO_0f’
   XO_MOVSXb = XO_0f(be),
               ^
lj_target_x86.h:181:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_0f(o) ((uint32_t)(0x0f00fd + (0x##o<<24)))
                  ^
lj_target_x86.h:257:15: note: in expansion of macro ‘XO_0f’
   XO_MOVSXw = XO_0f(bf),
               ^
lj_target_x86.h:181:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_0f(o) ((uint32_t)(0x0f00fd + (0x##o<<24)))
                  ^
lj_target_x86.h:259:14: note: in expansion of macro ‘XO_0f’
   XO_BSWAP = XO_0f(c8),
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:291:13: note: in expansion of macro ‘XO_’
   XO_FLDd = XO_(d9), XOg_FLDd = 0,
             ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:292:13: note: in expansion of macro ‘XO_’
   XO_FLDq = XO_(dd), XOg_FLDq = 0,
             ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:293:14: note: in expansion of macro ‘XO_’
   XO_FILDd = XO_(db), XOg_FILDd = 0,
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:294:14: note: in expansion of macro ‘XO_’
   XO_FILDq = XO_(df), XOg_FILDq = 5,
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:295:14: note: in expansion of macro ‘XO_’
   XO_FSTPd = XO_(d9), XOg_FSTPd = 3,
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:296:14: note: in expansion of macro ‘XO_’
   XO_FSTPq = XO_(dd), XOg_FSTPq = 3,
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:297:15: note: in expansion of macro ‘XO_’
   XO_FISTPq = XO_(df), XOg_FISTPq = 7,
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:298:16: note: in expansion of macro ‘XO_’
   XO_FISTTPq = XO_(dd), XOg_FISTTPq = 1,
                ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:299:14: note: in expansion of macro ‘XO_’
   XO_FADDq = XO_(dc), XOg_FADDq = 0,
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:300:14: note: in expansion of macro ‘XO_’
   XO_FLDCW = XO_(d9), XOg_FLDCW = 5,
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:301:15: note: in expansion of macro ‘XO_’
   XO_FNSTCW = XO_(d9), XOg_FNSTCW = 7
               ^
In file included from lj_asm.c:1331:0:
lj_asm_x86.h: In function ‘asm_exitstub_gen’:
lj_asm_x86.h:32:48: warning: ISO C forbids conversion of function pointer to object pointer type [-Wpedantic]
   *((int32_t *)(mxp-4)) = jmprel(mxp, (MCode *)(void *)lj_vm_exit_handler);
                                                ^
lj_asm_x86.h: In function ‘asm_gencall’:
lj_asm_x86.h:445:7: warning: ISO C forbids conversion of function pointer to object pointer type [-Wpedantic]
   if ((void *)ci->func)
       ^
In file included from lj_asm.c:171:0:
lj_emit_x86.h:414:50: warning: ISO C forbids conversion of function pointer to object pointer type [-Wpedantic]
 #define emit_call(as, f) emit_call_(as, (MCode *)(void *)(f))
                                                  ^
lj_asm_x86.h:446:5: note: in expansion of macro ‘emit_call’
     emit_call(as, ci->func);
     ^
In file included from lj_asm.c:1331:0:
lj_asm_x86.h: In function ‘asm_callx’:
lj_asm_x86.h:635:13: warning: ISO C forbids conversion of object pointer to function pointer type [-Wpedantic]
   ci.func = (ASMFunction)asm_callx_func(as, irf, func);
             ^
lj_asm_x86.h:636:8: warning: ISO C forbids conversion of function pointer to object pointer type [-Wpedantic]
   if (!(void *)ci.func) {
        ^
In file included from lj_asm.c:171:0:
lj_asm_x86.h: In function ‘fpmjoin_pow’:
lj_emit_x86.h:414:50: warning: ISO C forbids conversion of function pointer to object pointer type [-Wpedantic]
 #define emit_call(as, f) emit_call_(as, (MCode *)(void *)(f))
                                                  ^
lj_asm_x86.h:1655:7: note: in expansion of macro ‘emit_call’
       emit_call(as, lj_vm_pow_sse);
       ^
lj_asm_x86.h: In function ‘asm_fpmath’:
lj_emit_x86.h:414:50: warning: ISO C forbids conversion of function pointer to object pointer type [-Wpedantic]
 #define emit_call(as, f) emit_call_(as, (MCode *)(void *)(f))
                                                  ^
lj_asm_x86.h:1696:7: note: in expansion of macro ‘emit_call’
       emit_call(as, fpm == IRFPM_FLOOR ? lj_vm_floor_sse :
       ^
lj_emit_x86.h:414:50: warning: ISO C forbids conversion of function pointer to object pointer type [-Wpedantic]
 #define emit_call(as, f) emit_call_(as, (MCode *)(void *)(f))
                                                  ^
lj_asm_x86.h:1712:21: note: in expansion of macro ‘emit_call’
     case IRFPM_EXP: emit_call(as, lj_vm_exp_x87); break;
                     ^
lj_emit_x86.h:414:50: warning: ISO C forbids conversion of function pointer to object pointer type [-Wpedantic]
 #define emit_call(as, f) emit_call_(as, (MCode *)(void *)(f))
                                                  ^
lj_asm_x86.h:1713:22: note: in expansion of macro ‘emit_call’
     case IRFPM_EXP2: emit_call(as, lj_vm_exp2_x87); break;
                      ^
lj_asm_x86.h: In function ‘asm_fppowi’:
lj_emit_x86.h:414:50: warning: ISO C forbids conversion of function pointer to object pointer type [-Wpedantic]
 #define emit_call(as, f) emit_call_(as, (MCode *)(void *)(f))
                                                  ^
lj_asm_x86.h:1755:3: note: in expansion of macro ‘emit_call’
   emit_call(as, lj_vm_powi_sse);
   ^
In file included from lj_asm.c:1331:0:
lj_asm_x86.h: In function ‘asm_tail_fixup’:
lj_asm_x86.h:2562:48: warning: ISO C forbids conversion of function pointer to object pointer type [-Wpedantic]
   target = lnk ? traceref(as->J, lnk)->mcode : (MCode *)lj_vm_exit_interp;
                                                ^
CC        lj_trace.o
lj_vmevent.h:25:1: error: Enum initializer outside the range representable by int.

    Constraint violation (CV-CDE2):
        see C11 section 6.7.2.2:2 http://rvdoc.org/C11/6.7.2.2
        see CERT-C section MSC40-C http://rvdoc.org/CERT-C/MSC40-C
        see MISRA-C section 8.1:1 http://rvdoc.org/MISRA-C/8.1

lj_vmevent.h:25:1: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_target_x86.h:191:1: error: Signed integer overflow.

    Undefined behavior (UB-CCV1):
        see C11 section 6.5:5 http://rvdoc.org/C11/6.5
        see C11 section J.2:1 item 36 http://rvdoc.org/C11/J.2
        see CERT-C section INT32-C http://rvdoc.org/CERT-C/INT32-C
        see MISRA-C section 8.1:3 http://rvdoc.org/MISRA-C/8.1

lj_target_x86.h:191:1: error: Enum initializer outside the range representable by int.

    Constraint violation (CV-CDE2):
        see C11 section 6.7.2.2:2 http://rvdoc.org/C11/6.7.2.2
        see CERT-C section MSC40-C http://rvdoc.org/CERT-C/MSC40-C
        see MISRA-C section 8.1:1 http://rvdoc.org/MISRA-C/8.1

lj_target_x86.h:191:1: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_target_x86.h:191:1: error: Potential negative zero produced via bitwise operations, undefined under sign and magnitude or one's complement arithmetic, implementation-defined otherwise.

    Implementation-dependent undefined behavior (IMPLUB-CEB12):
        see C11 section 6.2.6.2:4 http://rvdoc.org/C11/6.2.6.2
        see C11 section J.2:1 item 14 http://rvdoc.org/C11/J.2
        see CERT-C section INT13-C http://rvdoc.org/CERT-C/INT13-C
        see CERT-C section MSC15-C http://rvdoc.org/CERT-C/MSC15-C
        see MISRA-C section 8.1:3 http://rvdoc.org/MISRA-C/8.1

lj_trace.c:288:124: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_trace.c:407:124: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_trace.c:475:124: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_trace.c:522:126: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_trace.c:585:129: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_trace.c:626:10: error: Potential negative zero produced via bitwise operations, undefined under sign and magnitude or one's complement arithmetic, implementation-defined otherwise.

    Implementation-dependent undefined behavior (IMPLUB-CEB12):
        see C11 section 6.2.6.2:4 http://rvdoc.org/C11/6.2.6.2
        see C11 section J.2:1 item 14 http://rvdoc.org/C11/J.2
        see CERT-C section INT13-C http://rvdoc.org/CERT-C/INT13-C
        see CERT-C section MSC15-C http://rvdoc.org/CERT-C/MSC15-C
        see MISRA-C section 8.1:3 http://rvdoc.org/MISRA-C/8.1

lj_trace.c:638:10: error: Potential negative zero produced via bitwise operations, undefined under sign and magnitude or one's complement arithmetic, implementation-defined otherwise.

    Implementation-dependent undefined behavior (IMPLUB-CEB12):
        see C11 section 6.2.6.2:4 http://rvdoc.org/C11/6.2.6.2
        see C11 section J.2:1 item 14 http://rvdoc.org/C11/J.2
        see CERT-C section INT13-C http://rvdoc.org/CERT-C/INT13-C
        see CERT-C section MSC15-C http://rvdoc.org/CERT-C/MSC15-C
        see MISRA-C section 8.1:3 http://rvdoc.org/MISRA-C/8.1

lj_trace.c:778:124: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

In file included from lj_trace.c:31:0:
lj_vmevent.h:22:23: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
   LJ_VMEVENT_##name = ((LJ_VMEVENT_##name##_) & 7)|((hash) << 3)
                       ^
lj_vmevent.h:27:3: note: in expansion of macro ‘VMEVENT_DEF’
   VMEVENT_DEF(TRACE, 0xb2d91467),
   ^
lj_vmevent.h:22:23: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
   LJ_VMEVENT_##name = ((LJ_VMEVENT_##name##_) & 7)|((hash) << 3)
                       ^
lj_vmevent.h:28:3: note: in expansion of macro ‘VMEVENT_DEF’
   VMEVENT_DEF(RECORD, 0x9284bf4f),
   ^
lj_vmevent.h:22:23: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
   LJ_VMEVENT_##name = ((LJ_VMEVENT_##name##_) & 7)|((hash) << 3)
                       ^
lj_vmevent.h:29:3: note: in expansion of macro ‘VMEVENT_DEF’
   VMEVENT_DEF(TEXIT, 0xb29df2b0),
   ^
In file included from lj_target.h:138:0,
                 from lj_trace.c:32:
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:230:12: note: in expansion of macro ‘XO_’
   XO_MOV = XO_(8b),
            ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:231:14: note: in expansion of macro ‘XO_’
   XO_MOVto = XO_(89),
              ^
lj_target_x86.h:182:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_66(o) ((uint32_t)(0x6600fd + (0x##o<<24)))
                  ^
lj_target_x86.h:232:15: note: in expansion of macro ‘XO_66’
   XO_MOVtow = XO_66(89),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:233:15: note: in expansion of macro ‘XO_’
   XO_MOVtob = XO_(88),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:234:14: note: in expansion of macro ‘XO_’
   XO_MOVmi = XO_(c7),
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:235:15: note: in expansion of macro ‘XO_’
   XO_MOVmib = XO_(c6),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:236:12: note: in expansion of macro ‘XO_’
   XO_LEA = XO_(8d),
            ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:237:16: note: in expansion of macro ‘XO_’
   XO_ARITHib = XO_(80),
                ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:238:15: note: in expansion of macro ‘XO_’
   XO_ARITHi = XO_(81),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:239:16: note: in expansion of macro ‘XO_’
   XO_ARITHi8 = XO_(83),
                ^
lj_target_x86.h:182:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_66(o) ((uint32_t)(0x6600fd + (0x##o<<24)))
                  ^
lj_target_x86.h:240:17: note: in expansion of macro ‘XO_66’
   XO_ARITHiw8 = XO_66(83),
                 ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:241:15: note: in expansion of macro ‘XO_’
   XO_SHIFTi = XO_(c1),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:242:15: note: in expansion of macro ‘XO_’
   XO_SHIFT1 = XO_(d1),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:243:16: note: in expansion of macro ‘XO_’
   XO_SHIFTcl = XO_(d3),
                ^
lj_target_x86.h:181:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_0f(o) ((uint32_t)(0x0f00fd + (0x##o<<24)))
                  ^
lj_target_x86.h:244:13: note: in expansion of macro ‘XO_0f’
   XO_IMUL = XO_0f(af),
             ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:248:14: note: in expansion of macro ‘XO_’
   XO_TESTb = XO_(84),
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:249:13: note: in expansion of macro ‘XO_’
   XO_TEST = XO_(85),
             ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:250:16: note: in expansion of macro ‘XO_’
   XO_GROUP3b = XO_(f6),
                ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:251:15: note: in expansion of macro ‘XO_’
   XO_GROUP3 = XO_(f7),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:252:16: note: in expansion of macro ‘XO_’
   XO_GROUP5b = XO_(fe),
                ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:253:15: note: in expansion of macro ‘XO_’
   XO_GROUP5 = XO_(ff),
               ^
lj_target_x86.h:181:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_0f(o) ((uint32_t)(0x0f00fd + (0x##o<<24)))
                  ^
lj_target_x86.h:254:15: note: in expansion of macro ‘XO_0f’
   XO_MOVZXb = XO_0f(b6),
               ^
lj_target_x86.h:181:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_0f(o) ((uint32_t)(0x0f00fd + (0x##o<<24)))
                  ^
lj_target_x86.h:255:15: note: in expansion of macro ‘XO_0f’
   XO_MOVZXw = XO_0f(b7),
               ^
lj_target_x86.h:181:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_0f(o) ((uint32_t)(0x0f00fd + (0x##o<<24)))
                  ^
lj_target_x86.h:256:15: note: in expansion of macro ‘XO_0f’
   XO_MOVSXb = XO_0f(be),
               ^
lj_target_x86.h:181:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_0f(o) ((uint32_t)(0x0f00fd + (0x##o<<24)))
                  ^
lj_target_x86.h:257:15: note: in expansion of macro ‘XO_0f’
   XO_MOVSXw = XO_0f(bf),
               ^
lj_target_x86.h:181:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_0f(o) ((uint32_t)(0x0f00fd + (0x##o<<24)))
                  ^
lj_target_x86.h:259:14: note: in expansion of macro ‘XO_0f’
   XO_BSWAP = XO_0f(c8),
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:291:13: note: in expansion of macro ‘XO_’
   XO_FLDd = XO_(d9), XOg_FLDd = 0,
             ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:292:13: note: in expansion of macro ‘XO_’
   XO_FLDq = XO_(dd), XOg_FLDq = 0,
             ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:293:14: note: in expansion of macro ‘XO_’
   XO_FILDd = XO_(db), XOg_FILDd = 0,
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:294:14: note: in expansion of macro ‘XO_’
   XO_FILDq = XO_(df), XOg_FILDq = 5,
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:295:14: note: in expansion of macro ‘XO_’
   XO_FSTPd = XO_(d9), XOg_FSTPd = 3,
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:296:14: note: in expansion of macro ‘XO_’
   XO_FSTPq = XO_(dd), XOg_FSTPq = 3,
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:297:15: note: in expansion of macro ‘XO_’
   XO_FISTPq = XO_(df), XOg_FISTPq = 7,
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:298:16: note: in expansion of macro ‘XO_’
   XO_FISTTPq = XO_(dd), XOg_FISTTPq = 1,
                ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:299:14: note: in expansion of macro ‘XO_’
   XO_FADDq = XO_(dc), XOg_FADDq = 0,
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:300:14: note: in expansion of macro ‘XO_’
   XO_FLDCW = XO_(d9), XOg_FLDCW = 5,
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:301:15: note: in expansion of macro ‘XO_’
   XO_FNSTCW = XO_(d9), XOg_FNSTCW = 7
               ^
lj_vmevent.h:25:1: error: Enum initializer outside the range representable by int.

    Constraint violation (CV-CDE2):
        see C11 section 6.7.2.2:2 http://rvdoc.org/C11/6.7.2.2
        see CERT-C section MSC40-C http://rvdoc.org/CERT-C/MSC40-C
        see MISRA-C section 8.1:1 http://rvdoc.org/MISRA-C/8.1

lj_vmevent.h:25:1: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_target_x86.h:191:1: error: Signed integer overflow.

    Undefined behavior (UB-CCV1):
        see C11 section 6.5:5 http://rvdoc.org/C11/6.5
        see C11 section J.2:1 item 36 http://rvdoc.org/C11/J.2
        see CERT-C section INT32-C http://rvdoc.org/CERT-C/INT32-C
        see MISRA-C section 8.1:3 http://rvdoc.org/MISRA-C/8.1

lj_target_x86.h:191:1: error: Enum initializer outside the range representable by int.

    Constraint violation (CV-CDE2):
        see C11 section 6.7.2.2:2 http://rvdoc.org/C11/6.7.2.2
        see CERT-C section MSC40-C http://rvdoc.org/CERT-C/MSC40-C
        see MISRA-C section 8.1:1 http://rvdoc.org/MISRA-C/8.1

lj_target_x86.h:191:1: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_target_x86.h:191:1: error: Potential negative zero produced via bitwise operations, undefined under sign and magnitude or one's complement arithmetic, implementation-defined otherwise.

    Implementation-dependent undefined behavior (IMPLUB-CEB12):
        see C11 section 6.2.6.2:4 http://rvdoc.org/C11/6.2.6.2
        see C11 section J.2:1 item 14 http://rvdoc.org/C11/J.2
        see CERT-C section INT13-C http://rvdoc.org/CERT-C/INT13-C
        see CERT-C section MSC15-C http://rvdoc.org/CERT-C/MSC15-C
        see MISRA-C section 8.1:3 http://rvdoc.org/MISRA-C/8.1

lj_trace.c:288:124: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_trace.c:407:124: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_trace.c:475:124: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_trace.c:522:126: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_trace.c:585:129: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_trace.c:626:10: error: Potential negative zero produced via bitwise operations, undefined under sign and magnitude or one's complement arithmetic, implementation-defined otherwise.

    Implementation-dependent undefined behavior (IMPLUB-CEB12):
        see C11 section 6.2.6.2:4 http://rvdoc.org/C11/6.2.6.2
        see C11 section J.2:1 item 14 http://rvdoc.org/C11/J.2
        see CERT-C section INT13-C http://rvdoc.org/CERT-C/INT13-C
        see CERT-C section MSC15-C http://rvdoc.org/CERT-C/MSC15-C
        see MISRA-C section 8.1:3 http://rvdoc.org/MISRA-C/8.1

lj_trace.c:638:10: error: Potential negative zero produced via bitwise operations, undefined under sign and magnitude or one's complement arithmetic, implementation-defined otherwise.

    Implementation-dependent undefined behavior (IMPLUB-CEB12):
        see C11 section 6.2.6.2:4 http://rvdoc.org/C11/6.2.6.2
        see C11 section J.2:1 item 14 http://rvdoc.org/C11/J.2
        see CERT-C section INT13-C http://rvdoc.org/CERT-C/INT13-C
        see CERT-C section MSC15-C http://rvdoc.org/CERT-C/MSC15-C
        see MISRA-C section 8.1:3 http://rvdoc.org/MISRA-C/8.1

lj_trace.c:778:124: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

In file included from lj_trace.c:31:0:
lj_vmevent.h:22:23: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
   LJ_VMEVENT_##name = ((LJ_VMEVENT_##name##_) & 7)|((hash) << 3)
                       ^
lj_vmevent.h:27:3: note: in expansion of macro ‘VMEVENT_DEF’
   VMEVENT_DEF(TRACE, 0xb2d91467),
   ^
lj_vmevent.h:22:23: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
   LJ_VMEVENT_##name = ((LJ_VMEVENT_##name##_) & 7)|((hash) << 3)
                       ^
lj_vmevent.h:28:3: note: in expansion of macro ‘VMEVENT_DEF’
   VMEVENT_DEF(RECORD, 0x9284bf4f),
   ^
lj_vmevent.h:22:23: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
   LJ_VMEVENT_##name = ((LJ_VMEVENT_##name##_) & 7)|((hash) << 3)
                       ^
lj_vmevent.h:29:3: note: in expansion of macro ‘VMEVENT_DEF’
   VMEVENT_DEF(TEXIT, 0xb29df2b0),
   ^
In file included from lj_target.h:138:0,
                 from lj_trace.c:32:
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:230:12: note: in expansion of macro ‘XO_’
   XO_MOV = XO_(8b),
            ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:231:14: note: in expansion of macro ‘XO_’
   XO_MOVto = XO_(89),
              ^
lj_target_x86.h:182:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_66(o) ((uint32_t)(0x6600fd + (0x##o<<24)))
                  ^
lj_target_x86.h:232:15: note: in expansion of macro ‘XO_66’
   XO_MOVtow = XO_66(89),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:233:15: note: in expansion of macro ‘XO_’
   XO_MOVtob = XO_(88),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:234:14: note: in expansion of macro ‘XO_’
   XO_MOVmi = XO_(c7),
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:235:15: note: in expansion of macro ‘XO_’
   XO_MOVmib = XO_(c6),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:236:12: note: in expansion of macro ‘XO_’
   XO_LEA = XO_(8d),
            ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:237:16: note: in expansion of macro ‘XO_’
   XO_ARITHib = XO_(80),
                ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:238:15: note: in expansion of macro ‘XO_’
   XO_ARITHi = XO_(81),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:239:16: note: in expansion of macro ‘XO_’
   XO_ARITHi8 = XO_(83),
                ^
lj_target_x86.h:182:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_66(o) ((uint32_t)(0x6600fd + (0x##o<<24)))
                  ^
lj_target_x86.h:240:17: note: in expansion of macro ‘XO_66’
   XO_ARITHiw8 = XO_66(83),
                 ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:241:15: note: in expansion of macro ‘XO_’
   XO_SHIFTi = XO_(c1),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:242:15: note: in expansion of macro ‘XO_’
   XO_SHIFT1 = XO_(d1),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:243:16: note: in expansion of macro ‘XO_’
   XO_SHIFTcl = XO_(d3),
                ^
lj_target_x86.h:181:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_0f(o) ((uint32_t)(0x0f00fd + (0x##o<<24)))
                  ^
lj_target_x86.h:244:13: note: in expansion of macro ‘XO_0f’
   XO_IMUL = XO_0f(af),
             ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:248:14: note: in expansion of macro ‘XO_’
   XO_TESTb = XO_(84),
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:249:13: note: in expansion of macro ‘XO_’
   XO_TEST = XO_(85),
             ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:250:16: note: in expansion of macro ‘XO_’
   XO_GROUP3b = XO_(f6),
                ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:251:15: note: in expansion of macro ‘XO_’
   XO_GROUP3 = XO_(f7),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:252:16: note: in expansion of macro ‘XO_’
   XO_GROUP5b = XO_(fe),
                ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:253:15: note: in expansion of macro ‘XO_’
   XO_GROUP5 = XO_(ff),
               ^
lj_target_x86.h:181:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_0f(o) ((uint32_t)(0x0f00fd + (0x##o<<24)))
                  ^
lj_target_x86.h:254:15: note: in expansion of macro ‘XO_0f’
   XO_MOVZXb = XO_0f(b6),
               ^
lj_target_x86.h:181:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_0f(o) ((uint32_t)(0x0f00fd + (0x##o<<24)))
                  ^
lj_target_x86.h:255:15: note: in expansion of macro ‘XO_0f’
   XO_MOVZXw = XO_0f(b7),
               ^
lj_target_x86.h:181:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_0f(o) ((uint32_t)(0x0f00fd + (0x##o<<24)))
                  ^
lj_target_x86.h:256:15: note: in expansion of macro ‘XO_0f’
   XO_MOVSXb = XO_0f(be),
               ^
lj_target_x86.h:181:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_0f(o) ((uint32_t)(0x0f00fd + (0x##o<<24)))
                  ^
lj_target_x86.h:257:15: note: in expansion of macro ‘XO_0f’
   XO_MOVSXw = XO_0f(bf),
               ^
lj_target_x86.h:181:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_0f(o) ((uint32_t)(0x0f00fd + (0x##o<<24)))
                  ^
lj_target_x86.h:259:14: note: in expansion of macro ‘XO_0f’
   XO_BSWAP = XO_0f(c8),
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:291:13: note: in expansion of macro ‘XO_’
   XO_FLDd = XO_(d9), XOg_FLDd = 0,
             ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:292:13: note: in expansion of macro ‘XO_’
   XO_FLDq = XO_(dd), XOg_FLDq = 0,
             ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:293:14: note: in expansion of macro ‘XO_’
   XO_FILDd = XO_(db), XOg_FILDd = 0,
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:294:14: note: in expansion of macro ‘XO_’
   XO_FILDq = XO_(df), XOg_FILDq = 5,
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:295:14: note: in expansion of macro ‘XO_’
   XO_FSTPd = XO_(d9), XOg_FSTPd = 3,
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:296:14: note: in expansion of macro ‘XO_’
   XO_FSTPq = XO_(dd), XOg_FSTPq = 3,
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:297:15: note: in expansion of macro ‘XO_’
   XO_FISTPq = XO_(df), XOg_FISTPq = 7,
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:298:16: note: in expansion of macro ‘XO_’
   XO_FISTTPq = XO_(dd), XOg_FISTTPq = 1,
                ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:299:14: note: in expansion of macro ‘XO_’
   XO_FADDq = XO_(dc), XOg_FADDq = 0,
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:300:14: note: in expansion of macro ‘XO_’
   XO_FLDCW = XO_(d9), XOg_FLDCW = 5,
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:301:15: note: in expansion of macro ‘XO_’
   XO_FNSTCW = XO_(d9), XOg_FNSTCW = 7
               ^
CC        lj_gdbjit.o
CC        lj_ctype.o
CC        lj_cdata.o
CC        lj_cconv.o
CC        lj_ccall.o
lj_ccall.c: In function ‘lj_ccall_func’:
lj_ccall.c:874:15: warning: ISO C forbids conversion of object pointer to function pointer type [-Wpedantic]
     cc.func = (void (*)(void))cdata_getptr(cdataptr(cd), sz);
               ^
lj_ccall.c:881:24: warning: ISO C forbids conversion of function pointer to object pointer type [-Wpedantic]
       setlightudV(&tv, (void *)cc.func);
                        ^
lj_ccall.c: In function ‘lj_ccall_func’:
lj_ccall.c:874:15: warning: ISO C forbids conversion of object pointer to function pointer type [-Wpedantic]
     cc.func = (void (*)(void))cdata_getptr(cdataptr(cd), sz);
               ^
lj_ccall.c:881:24: warning: ISO C forbids conversion of function pointer to object pointer type [-Wpedantic]
       setlightudV(&tv, (void *)cc.func);
                        ^
CC        lj_ccallback.o
lj_target_x86.h:191:1: error: Signed integer overflow.

    Undefined behavior (UB-CCV1):
        see C11 section 6.5:5 http://rvdoc.org/C11/6.5
        see C11 section J.2:1 item 36 http://rvdoc.org/C11/J.2
        see CERT-C section INT32-C http://rvdoc.org/CERT-C/INT32-C
        see MISRA-C section 8.1:3 http://rvdoc.org/MISRA-C/8.1

lj_target_x86.h:191:1: error: Enum initializer outside the range representable by int.

    Constraint violation (CV-CDE2):
        see C11 section 6.7.2.2:2 http://rvdoc.org/C11/6.7.2.2
        see CERT-C section MSC40-C http://rvdoc.org/CERT-C/MSC40-C
        see MISRA-C section 8.1:1 http://rvdoc.org/MISRA-C/8.1

lj_target_x86.h:191:1: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_target_x86.h:191:1: error: Potential negative zero produced via bitwise operations, undefined under sign and magnitude or one's complement arithmetic, implementation-defined otherwise.

    Implementation-dependent undefined behavior (IMPLUB-CEB12):
        see C11 section 6.2.6.2:4 http://rvdoc.org/C11/6.2.6.2
        see C11 section J.2:1 item 14 http://rvdoc.org/C11/J.2
        see CERT-C section INT13-C http://rvdoc.org/CERT-C/INT13-C
        see CERT-C section MSC15-C http://rvdoc.org/CERT-C/MSC15-C
        see MISRA-C section 8.1:3 http://rvdoc.org/MISRA-C/8.1

lj_ccallback.c:110:3: error: Conversion to a pointer type with a stricter alignment requirement (possibly undefined).

    Undefined behavior (UB-CCV11):
        see C11 section 6.3.2.3:7 http://rvdoc.org/C11/6.3.2.3
        see C11 section J.2:1 item 25 http://rvdoc.org/C11/J.2
        see CERT-C section EXP36-C http://rvdoc.org/CERT-C/EXP36-C
        see MISRA-C section 8.1:3 http://rvdoc.org/MISRA-C/8.1

lj_ccallback.c:233:3: warning: Conversion from an integer to non-null pointer.

    Implementation defined behavior (IMPL-CCV13):
        see C11 section 6.3.2.3:5 http://rvdoc.org/C11/6.3.2.3
        see CERT section INT36-C http://rvdoc.org/CERT/INT36-C

In file included from lj_target.h:138:0,
                 from lj_ccallback.c:19:
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:230:12: note: in expansion of macro ‘XO_’
   XO_MOV = XO_(8b),
            ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:231:14: note: in expansion of macro ‘XO_’
   XO_MOVto = XO_(89),
              ^
lj_target_x86.h:182:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_66(o) ((uint32_t)(0x6600fd + (0x##o<<24)))
                  ^
lj_target_x86.h:232:15: note: in expansion of macro ‘XO_66’
   XO_MOVtow = XO_66(89),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:233:15: note: in expansion of macro ‘XO_’
   XO_MOVtob = XO_(88),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:234:14: note: in expansion of macro ‘XO_’
   XO_MOVmi = XO_(c7),
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:235:15: note: in expansion of macro ‘XO_’
   XO_MOVmib = XO_(c6),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:236:12: note: in expansion of macro ‘XO_’
   XO_LEA = XO_(8d),
            ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:237:16: note: in expansion of macro ‘XO_’
   XO_ARITHib = XO_(80),
                ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:238:15: note: in expansion of macro ‘XO_’
   XO_ARITHi = XO_(81),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:239:16: note: in expansion of macro ‘XO_’
   XO_ARITHi8 = XO_(83),
                ^
lj_target_x86.h:182:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_66(o) ((uint32_t)(0x6600fd + (0x##o<<24)))
                  ^
lj_target_x86.h:240:17: note: in expansion of macro ‘XO_66’
   XO_ARITHiw8 = XO_66(83),
                 ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:241:15: note: in expansion of macro ‘XO_’
   XO_SHIFTi = XO_(c1),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:242:15: note: in expansion of macro ‘XO_’
   XO_SHIFT1 = XO_(d1),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:243:16: note: in expansion of macro ‘XO_’
   XO_SHIFTcl = XO_(d3),
                ^
lj_target_x86.h:181:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_0f(o) ((uint32_t)(0x0f00fd + (0x##o<<24)))
                  ^
lj_target_x86.h:244:13: note: in expansion of macro ‘XO_0f’
   XO_IMUL = XO_0f(af),
             ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:248:14: note: in expansion of macro ‘XO_’
   XO_TESTb = XO_(84),
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:249:13: note: in expansion of macro ‘XO_’
   XO_TEST = XO_(85),
             ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:250:16: note: in expansion of macro ‘XO_’
   XO_GROUP3b = XO_(f6),
                ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:251:15: note: in expansion of macro ‘XO_’
   XO_GROUP3 = XO_(f7),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:252:16: note: in expansion of macro ‘XO_’
   XO_GROUP5b = XO_(fe),
                ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:253:15: note: in expansion of macro ‘XO_’
   XO_GROUP5 = XO_(ff),
               ^
lj_target_x86.h:181:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_0f(o) ((uint32_t)(0x0f00fd + (0x##o<<24)))
                  ^
lj_target_x86.h:254:15: note: in expansion of macro ‘XO_0f’
   XO_MOVZXb = XO_0f(b6),
               ^
lj_target_x86.h:181:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_0f(o) ((uint32_t)(0x0f00fd + (0x##o<<24)))
                  ^
lj_target_x86.h:255:15: note: in expansion of macro ‘XO_0f’
   XO_MOVZXw = XO_0f(b7),
               ^
lj_target_x86.h:181:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_0f(o) ((uint32_t)(0x0f00fd + (0x##o<<24)))
                  ^
lj_target_x86.h:256:15: note: in expansion of macro ‘XO_0f’
   XO_MOVSXb = XO_0f(be),
               ^
lj_target_x86.h:181:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_0f(o) ((uint32_t)(0x0f00fd + (0x##o<<24)))
                  ^
lj_target_x86.h:257:15: note: in expansion of macro ‘XO_0f’
   XO_MOVSXw = XO_0f(bf),
               ^
lj_target_x86.h:181:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_0f(o) ((uint32_t)(0x0f00fd + (0x##o<<24)))
                  ^
lj_target_x86.h:259:14: note: in expansion of macro ‘XO_0f’
   XO_BSWAP = XO_0f(c8),
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:291:13: note: in expansion of macro ‘XO_’
   XO_FLDd = XO_(d9), XOg_FLDd = 0,
             ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:292:13: note: in expansion of macro ‘XO_’
   XO_FLDq = XO_(dd), XOg_FLDq = 0,
             ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:293:14: note: in expansion of macro ‘XO_’
   XO_FILDd = XO_(db), XOg_FILDd = 0,
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:294:14: note: in expansion of macro ‘XO_’
   XO_FILDq = XO_(df), XOg_FILDq = 5,
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:295:14: note: in expansion of macro ‘XO_’
   XO_FSTPd = XO_(d9), XOg_FSTPd = 3,
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:296:14: note: in expansion of macro ‘XO_’
   XO_FSTPq = XO_(dd), XOg_FSTPq = 3,
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:297:15: note: in expansion of macro ‘XO_’
   XO_FISTPq = XO_(df), XOg_FISTPq = 7,
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:298:16: note: in expansion of macro ‘XO_’
   XO_FISTTPq = XO_(dd), XOg_FISTTPq = 1,
                ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:299:14: note: in expansion of macro ‘XO_’
   XO_FADDq = XO_(dc), XOg_FADDq = 0,
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:300:14: note: in expansion of macro ‘XO_’
   XO_FLDCW = XO_(d9), XOg_FLDCW = 5,
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:301:15: note: in expansion of macro ‘XO_’
   XO_FNSTCW = XO_(d9), XOg_FNSTCW = 7
               ^
lj_ccallback.c: In function ‘callback_mcode_init’:
lj_ccallback.c:110:32: warning: ISO C forbids conversion of function pointer to object pointer type [-Wpedantic]
   uint8_t *target = (uint8_t *)(void *)lj_vm_ffi_callback;
                                ^
lj_target_x86.h:191:1: error: Signed integer overflow.

    Undefined behavior (UB-CCV1):
        see C11 section 6.5:5 http://rvdoc.org/C11/6.5
        see C11 section J.2:1 item 36 http://rvdoc.org/C11/J.2
        see CERT-C section INT32-C http://rvdoc.org/CERT-C/INT32-C
        see MISRA-C section 8.1:3 http://rvdoc.org/MISRA-C/8.1

lj_target_x86.h:191:1: error: Enum initializer outside the range representable by int.

    Constraint violation (CV-CDE2):
        see C11 section 6.7.2.2:2 http://rvdoc.org/C11/6.7.2.2
        see CERT-C section MSC40-C http://rvdoc.org/CERT-C/MSC40-C
        see MISRA-C section 8.1:1 http://rvdoc.org/MISRA-C/8.1

lj_target_x86.h:191:1: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_target_x86.h:191:1: error: Potential negative zero produced via bitwise operations, undefined under sign and magnitude or one's complement arithmetic, implementation-defined otherwise.

    Implementation-dependent undefined behavior (IMPLUB-CEB12):
        see C11 section 6.2.6.2:4 http://rvdoc.org/C11/6.2.6.2
        see C11 section J.2:1 item 14 http://rvdoc.org/C11/J.2
        see CERT-C section INT13-C http://rvdoc.org/CERT-C/INT13-C
        see CERT-C section MSC15-C http://rvdoc.org/CERT-C/MSC15-C
        see MISRA-C section 8.1:3 http://rvdoc.org/MISRA-C/8.1

lj_ccallback.c:110:3: error: Conversion to a pointer type with a stricter alignment requirement (possibly undefined).

    Undefined behavior (UB-CCV11):
        see C11 section 6.3.2.3:7 http://rvdoc.org/C11/6.3.2.3
        see C11 section J.2:1 item 25 http://rvdoc.org/C11/J.2
        see CERT-C section EXP36-C http://rvdoc.org/CERT-C/EXP36-C
        see MISRA-C section 8.1:3 http://rvdoc.org/MISRA-C/8.1

lj_ccallback.c:233:3: warning: Conversion from an integer to non-null pointer.

    Implementation defined behavior (IMPL-CCV13):
        see C11 section 6.3.2.3:5 http://rvdoc.org/C11/6.3.2.3
        see CERT section INT36-C http://rvdoc.org/CERT/INT36-C

In file included from lj_target.h:138:0,
                 from lj_ccallback.c:19:
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:230:12: note: in expansion of macro ‘XO_’
   XO_MOV = XO_(8b),
            ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:231:14: note: in expansion of macro ‘XO_’
   XO_MOVto = XO_(89),
              ^
lj_target_x86.h:182:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_66(o) ((uint32_t)(0x6600fd + (0x##o<<24)))
                  ^
lj_target_x86.h:232:15: note: in expansion of macro ‘XO_66’
   XO_MOVtow = XO_66(89),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:233:15: note: in expansion of macro ‘XO_’
   XO_MOVtob = XO_(88),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:234:14: note: in expansion of macro ‘XO_’
   XO_MOVmi = XO_(c7),
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:235:15: note: in expansion of macro ‘XO_’
   XO_MOVmib = XO_(c6),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:236:12: note: in expansion of macro ‘XO_’
   XO_LEA = XO_(8d),
            ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:237:16: note: in expansion of macro ‘XO_’
   XO_ARITHib = XO_(80),
                ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:238:15: note: in expansion of macro ‘XO_’
   XO_ARITHi = XO_(81),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:239:16: note: in expansion of macro ‘XO_’
   XO_ARITHi8 = XO_(83),
                ^
lj_target_x86.h:182:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_66(o) ((uint32_t)(0x6600fd + (0x##o<<24)))
                  ^
lj_target_x86.h:240:17: note: in expansion of macro ‘XO_66’
   XO_ARITHiw8 = XO_66(83),
                 ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:241:15: note: in expansion of macro ‘XO_’
   XO_SHIFTi = XO_(c1),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:242:15: note: in expansion of macro ‘XO_’
   XO_SHIFT1 = XO_(d1),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:243:16: note: in expansion of macro ‘XO_’
   XO_SHIFTcl = XO_(d3),
                ^
lj_target_x86.h:181:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_0f(o) ((uint32_t)(0x0f00fd + (0x##o<<24)))
                  ^
lj_target_x86.h:244:13: note: in expansion of macro ‘XO_0f’
   XO_IMUL = XO_0f(af),
             ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:248:14: note: in expansion of macro ‘XO_’
   XO_TESTb = XO_(84),
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:249:13: note: in expansion of macro ‘XO_’
   XO_TEST = XO_(85),
             ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:250:16: note: in expansion of macro ‘XO_’
   XO_GROUP3b = XO_(f6),
                ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:251:15: note: in expansion of macro ‘XO_’
   XO_GROUP3 = XO_(f7),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:252:16: note: in expansion of macro ‘XO_’
   XO_GROUP5b = XO_(fe),
                ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:253:15: note: in expansion of macro ‘XO_’
   XO_GROUP5 = XO_(ff),
               ^
lj_target_x86.h:181:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_0f(o) ((uint32_t)(0x0f00fd + (0x##o<<24)))
                  ^
lj_target_x86.h:254:15: note: in expansion of macro ‘XO_0f’
   XO_MOVZXb = XO_0f(b6),
               ^
lj_target_x86.h:181:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_0f(o) ((uint32_t)(0x0f00fd + (0x##o<<24)))
                  ^
lj_target_x86.h:255:15: note: in expansion of macro ‘XO_0f’
   XO_MOVZXw = XO_0f(b7),
               ^
lj_target_x86.h:181:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_0f(o) ((uint32_t)(0x0f00fd + (0x##o<<24)))
                  ^
lj_target_x86.h:256:15: note: in expansion of macro ‘XO_0f’
   XO_MOVSXb = XO_0f(be),
               ^
lj_target_x86.h:181:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_0f(o) ((uint32_t)(0x0f00fd + (0x##o<<24)))
                  ^
lj_target_x86.h:257:15: note: in expansion of macro ‘XO_0f’
   XO_MOVSXw = XO_0f(bf),
               ^
lj_target_x86.h:181:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_0f(o) ((uint32_t)(0x0f00fd + (0x##o<<24)))
                  ^
lj_target_x86.h:259:14: note: in expansion of macro ‘XO_0f’
   XO_BSWAP = XO_0f(c8),
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:291:13: note: in expansion of macro ‘XO_’
   XO_FLDd = XO_(d9), XOg_FLDd = 0,
             ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:292:13: note: in expansion of macro ‘XO_’
   XO_FLDq = XO_(dd), XOg_FLDq = 0,
             ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:293:14: note: in expansion of macro ‘XO_’
   XO_FILDd = XO_(db), XOg_FILDd = 0,
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:294:14: note: in expansion of macro ‘XO_’
   XO_FILDq = XO_(df), XOg_FILDq = 5,
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:295:14: note: in expansion of macro ‘XO_’
   XO_FSTPd = XO_(d9), XOg_FSTPd = 3,
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:296:14: note: in expansion of macro ‘XO_’
   XO_FSTPq = XO_(dd), XOg_FSTPq = 3,
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:297:15: note: in expansion of macro ‘XO_’
   XO_FISTPq = XO_(df), XOg_FISTPq = 7,
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:298:16: note: in expansion of macro ‘XO_’
   XO_FISTTPq = XO_(dd), XOg_FISTTPq = 1,
                ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:299:14: note: in expansion of macro ‘XO_’
   XO_FADDq = XO_(dc), XOg_FADDq = 0,
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:300:14: note: in expansion of macro ‘XO_’
   XO_FLDCW = XO_(d9), XOg_FLDCW = 5,
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:301:15: note: in expansion of macro ‘XO_’
   XO_FNSTCW = XO_(d9), XOg_FNSTCW = 7
               ^
lj_ccallback.c: In function ‘callback_mcode_init’:
lj_ccallback.c:110:32: warning: ISO C forbids conversion of function pointer to object pointer type [-Wpedantic]
   uint8_t *target = (uint8_t *)(void *)lj_vm_ffi_callback;
                                ^
CC        lj_carith.o
lj_carith.c:82:7: warning: Conversion from an integer to non-null pointer.

    Implementation defined behavior (IMPL-CCV13):
        see C11 section 6.3.2.3:5 http://rvdoc.org/C11/6.3.2.3
        see CERT section INT36-C http://rvdoc.org/CERT/INT36-C

lj_carith.c:304:3: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_carith.c:320:3: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_carith.c:82:7: warning: Conversion from an integer to non-null pointer.

    Implementation defined behavior (IMPL-CCV13):
        see C11 section 6.3.2.3:5 http://rvdoc.org/C11/6.3.2.3
        see CERT section INT36-C http://rvdoc.org/CERT/INT36-C

lj_carith.c:304:3: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_carith.c:320:3: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

CC        lj_clib.o
CC        lj_cparse.o
lj_cparse.c:894:6: error: Trying to look up identifier __builtin_clz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_cparse.c:900:6: error: Trying to look up identifier __builtin_clz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_cparse.c:1019:5: error: Trying to look up identifier __builtin_clz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_cparse.c:1068:17: error: Trying to look up identifier __builtin_clz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_cparse.c:1099:15: error: Trying to look up identifier __builtin_clz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_cparse.c:1576:5: error: Trying to look up identifier __builtin_clz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_cparse.c:1763:7: error: Trying to look up identifier __builtin_clz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_cparse.c:894:6: error: Trying to look up identifier __builtin_clz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_cparse.c:900:6: error: Trying to look up identifier __builtin_clz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_cparse.c:1019:5: error: Trying to look up identifier __builtin_clz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_cparse.c:1068:17: error: Trying to look up identifier __builtin_clz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_cparse.c:1099:15: error: Trying to look up identifier __builtin_clz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_cparse.c:1576:5: error: Trying to look up identifier __builtin_clz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_cparse.c:1763:7: error: Trying to look up identifier __builtin_clz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

CC        lj_lib.o
CC        lj_alloc.o
lj_alloc.c:749:5: warning: Conversion from an integer to non-null pointer.

    Implementation defined behavior (IMPL-CCV13):
        see C11 section 6.3.2.3:5 http://rvdoc.org/C11/6.3.2.3
        see CERT section INT36-C http://rvdoc.org/CERT/INT36-C

lj_alloc.c:778:5: warning: Conversion from an integer to non-null pointer.

    Implementation defined behavior (IMPL-CCV13):
        see C11 section 6.3.2.3:5 http://rvdoc.org/C11/6.3.2.3
        see CERT section INT36-C http://rvdoc.org/CERT/INT36-C

lj_alloc.c:846:488: error: Trying to look up identifier __builtin_clz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_alloc.c:895:488: error: Trying to look up identifier __builtin_clz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_alloc.c:903:3: warning: Conversion from an integer to non-null pointer.

    Implementation defined behavior (IMPL-CCV13):
        see C11 section 6.3.2.3:5 http://rvdoc.org/C11/6.3.2.3
        see CERT section INT36-C http://rvdoc.org/CERT/INT36-C

lj_alloc.c:918:7: warning: Conversion from an integer to non-null pointer.

    Implementation defined behavior (IMPL-CCV13):
        see C11 section 6.3.2.3:5 http://rvdoc.org/C11/6.3.2.3
        see CERT section INT36-C http://rvdoc.org/CERT/INT36-C

lj_alloc.c:925:3: warning: Conversion from an integer to non-null pointer.

    Implementation defined behavior (IMPL-CCV13):
        see C11 section 6.3.2.3:5 http://rvdoc.org/C11/6.3.2.3
        see CERT section INT36-C http://rvdoc.org/CERT/INT36-C

lj_alloc.c:992:148: error: Trying to look up identifier __builtin_clz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_alloc.c:1022:2: warning: Conversion from an integer to non-null pointer.

    Implementation defined behavior (IMPL-CCV13):
        see C11 section 6.3.2.3:5 http://rvdoc.org/C11/6.3.2.3
        see CERT section INT36-C http://rvdoc.org/CERT/INT36-C

lj_alloc.c:1054:122: error: Trying to look up identifier __builtin_clz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_alloc.c:1083:7: error: Trying to look up identifier __builtin_ctz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_alloc.c:1104:490: error: Trying to look up identifier __builtin_clz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_alloc.c:1117:3: error: Trying to look up identifier __builtin_ctz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_alloc.c:1150:3: warning: Conversion from an integer to non-null pointer.

    Implementation defined behavior (IMPL-CCV13):
        see C11 section 6.3.2.3:5 http://rvdoc.org/C11/6.3.2.3
        see CERT section INT36-C http://rvdoc.org/CERT/INT36-C

lj_alloc.c:1206:2: error: Trying to look up identifier __builtin_ctz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_alloc.c:1326:151: error: Trying to look up identifier __builtin_clz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_alloc.c:749:5: warning: Conversion from an integer to non-null pointer.

    Implementation defined behavior (IMPL-CCV13):
        see C11 section 6.3.2.3:5 http://rvdoc.org/C11/6.3.2.3
        see CERT section INT36-C http://rvdoc.org/CERT/INT36-C

lj_alloc.c:778:5: warning: Conversion from an integer to non-null pointer.

    Implementation defined behavior (IMPL-CCV13):
        see C11 section 6.3.2.3:5 http://rvdoc.org/C11/6.3.2.3
        see CERT section INT36-C http://rvdoc.org/CERT/INT36-C

lj_alloc.c:846:488: error: Trying to look up identifier __builtin_clz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_alloc.c:895:488: error: Trying to look up identifier __builtin_clz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_alloc.c:903:3: warning: Conversion from an integer to non-null pointer.

    Implementation defined behavior (IMPL-CCV13):
        see C11 section 6.3.2.3:5 http://rvdoc.org/C11/6.3.2.3
        see CERT section INT36-C http://rvdoc.org/CERT/INT36-C

lj_alloc.c:918:7: warning: Conversion from an integer to non-null pointer.

    Implementation defined behavior (IMPL-CCV13):
        see C11 section 6.3.2.3:5 http://rvdoc.org/C11/6.3.2.3
        see CERT section INT36-C http://rvdoc.org/CERT/INT36-C

lj_alloc.c:925:3: warning: Conversion from an integer to non-null pointer.

    Implementation defined behavior (IMPL-CCV13):
        see C11 section 6.3.2.3:5 http://rvdoc.org/C11/6.3.2.3
        see CERT section INT36-C http://rvdoc.org/CERT/INT36-C

lj_alloc.c:992:148: error: Trying to look up identifier __builtin_clz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_alloc.c:1022:2: warning: Conversion from an integer to non-null pointer.

    Implementation defined behavior (IMPL-CCV13):
        see C11 section 6.3.2.3:5 http://rvdoc.org/C11/6.3.2.3
        see CERT section INT36-C http://rvdoc.org/CERT/INT36-C

lj_alloc.c:1054:122: error: Trying to look up identifier __builtin_clz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_alloc.c:1083:7: error: Trying to look up identifier __builtin_ctz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_alloc.c:1104:490: error: Trying to look up identifier __builtin_clz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_alloc.c:1117:3: error: Trying to look up identifier __builtin_ctz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_alloc.c:1150:3: warning: Conversion from an integer to non-null pointer.

    Implementation defined behavior (IMPL-CCV13):
        see C11 section 6.3.2.3:5 http://rvdoc.org/C11/6.3.2.3
        see CERT section INT36-C http://rvdoc.org/CERT/INT36-C

lj_alloc.c:1206:2: error: Trying to look up identifier __builtin_ctz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

lj_alloc.c:1326:151: error: Trying to look up identifier __builtin_clz, but no such identifier is in scope.

    Syntax error (SE-CID1):
        see C11 section 6.5.1:2 http://rvdoc.org/C11/6.5.1
        see CERT-C section DCL31-C http://rvdoc.org/CERT-C/DCL31-C

CC        lib_aux.o
BUILDVM   lj_libdef.h
CC        lib_base.o
CC        lib_math.o
CC        lib_bit.o
CC        lib_string.o
CC        lib_table.o
CC        lib_io.o
CC        lib_os.o
CC        lib_package.o
lib_package.c: In function ‘ll_sym’:
lib_package.c:53:21: warning: ISO C forbids conversion of object pointer to function pointer type [-Wpedantic]
   lua_CFunction f = (lua_CFunction)dlsym(lib, sym);
                     ^
lib_package.c: In function ‘ll_sym’:
lib_package.c:53:21: warning: ISO C forbids conversion of object pointer to function pointer type [-Wpedantic]
   lua_CFunction f = (lua_CFunction)dlsym(lib, sym);
                     ^
CC        lib_debug.o
CC        lib_jit.o
lj_target_x86.h:191:1: error: Signed integer overflow.

    Undefined behavior (UB-CCV1):
        see C11 section 6.5:5 http://rvdoc.org/C11/6.5
        see C11 section J.2:1 item 36 http://rvdoc.org/C11/J.2
        see CERT-C section INT32-C http://rvdoc.org/CERT-C/INT32-C
        see MISRA-C section 8.1:3 http://rvdoc.org/MISRA-C/8.1

lj_target_x86.h:191:1: error: Enum initializer outside the range representable by int.

    Constraint violation (CV-CDE2):
        see C11 section 6.7.2.2:2 http://rvdoc.org/C11/6.7.2.2
        see CERT-C section MSC40-C http://rvdoc.org/CERT-C/MSC40-C
        see MISRA-C section 8.1:1 http://rvdoc.org/MISRA-C/8.1

lj_target_x86.h:191:1: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_target_x86.h:191:1: error: Potential negative zero produced via bitwise operations, undefined under sign and magnitude or one's complement arithmetic, implementation-defined otherwise.

    Implementation-dependent undefined behavior (IMPLUB-CEB12):
        see C11 section 6.2.6.2:4 http://rvdoc.org/C11/6.2.6.2
        see C11 section J.2:1 item 14 http://rvdoc.org/C11/J.2
        see CERT-C section INT13-C http://rvdoc.org/CERT-C/INT13-C
        see CERT-C section MSC15-C http://rvdoc.org/CERT-C/MSC15-C
        see MISRA-C section 8.1:3 http://rvdoc.org/MISRA-C/8.1

lj_vmevent.h:25:1: error: Enum initializer outside the range representable by int.

    Constraint violation (CV-CDE2):
        see C11 section 6.7.2.2:2 http://rvdoc.org/C11/6.7.2.2
        see CERT-C section MSC40-C http://rvdoc.org/CERT-C/MSC40-C
        see MISRA-C section 8.1:1 http://rvdoc.org/MISRA-C/8.1

lj_vmevent.h:25:1: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lib_jit.c:362:5: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

In file included from lj_target.h:138:0,
                 from lib_jit.c:25:
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:230:12: note: in expansion of macro ‘XO_’
   XO_MOV = XO_(8b),
            ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:231:14: note: in expansion of macro ‘XO_’
   XO_MOVto = XO_(89),
              ^
lj_target_x86.h:182:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_66(o) ((uint32_t)(0x6600fd + (0x##o<<24)))
                  ^
lj_target_x86.h:232:15: note: in expansion of macro ‘XO_66’
   XO_MOVtow = XO_66(89),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:233:15: note: in expansion of macro ‘XO_’
   XO_MOVtob = XO_(88),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:234:14: note: in expansion of macro ‘XO_’
   XO_MOVmi = XO_(c7),
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:235:15: note: in expansion of macro ‘XO_’
   XO_MOVmib = XO_(c6),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:236:12: note: in expansion of macro ‘XO_’
   XO_LEA = XO_(8d),
            ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:237:16: note: in expansion of macro ‘XO_’
   XO_ARITHib = XO_(80),
                ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:238:15: note: in expansion of macro ‘XO_’
   XO_ARITHi = XO_(81),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:239:16: note: in expansion of macro ‘XO_’
   XO_ARITHi8 = XO_(83),
                ^
lj_target_x86.h:182:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_66(o) ((uint32_t)(0x6600fd + (0x##o<<24)))
                  ^
lj_target_x86.h:240:17: note: in expansion of macro ‘XO_66’
   XO_ARITHiw8 = XO_66(83),
                 ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:241:15: note: in expansion of macro ‘XO_’
   XO_SHIFTi = XO_(c1),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:242:15: note: in expansion of macro ‘XO_’
   XO_SHIFT1 = XO_(d1),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:243:16: note: in expansion of macro ‘XO_’
   XO_SHIFTcl = XO_(d3),
                ^
lj_target_x86.h:181:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_0f(o) ((uint32_t)(0x0f00fd + (0x##o<<24)))
                  ^
lj_target_x86.h:244:13: note: in expansion of macro ‘XO_0f’
   XO_IMUL = XO_0f(af),
             ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:248:14: note: in expansion of macro ‘XO_’
   XO_TESTb = XO_(84),
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:249:13: note: in expansion of macro ‘XO_’
   XO_TEST = XO_(85),
             ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:250:16: note: in expansion of macro ‘XO_’
   XO_GROUP3b = XO_(f6),
                ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:251:15: note: in expansion of macro ‘XO_’
   XO_GROUP3 = XO_(f7),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:252:16: note: in expansion of macro ‘XO_’
   XO_GROUP5b = XO_(fe),
                ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:253:15: note: in expansion of macro ‘XO_’
   XO_GROUP5 = XO_(ff),
               ^
lj_target_x86.h:181:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_0f(o) ((uint32_t)(0x0f00fd + (0x##o<<24)))
                  ^
lj_target_x86.h:254:15: note: in expansion of macro ‘XO_0f’
   XO_MOVZXb = XO_0f(b6),
               ^
lj_target_x86.h:181:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_0f(o) ((uint32_t)(0x0f00fd + (0x##o<<24)))
                  ^
lj_target_x86.h:255:15: note: in expansion of macro ‘XO_0f’
   XO_MOVZXw = XO_0f(b7),
               ^
lj_target_x86.h:181:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_0f(o) ((uint32_t)(0x0f00fd + (0x##o<<24)))
                  ^
lj_target_x86.h:256:15: note: in expansion of macro ‘XO_0f’
   XO_MOVSXb = XO_0f(be),
               ^
lj_target_x86.h:181:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_0f(o) ((uint32_t)(0x0f00fd + (0x##o<<24)))
                  ^
lj_target_x86.h:257:15: note: in expansion of macro ‘XO_0f’
   XO_MOVSXw = XO_0f(bf),
               ^
lj_target_x86.h:181:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_0f(o) ((uint32_t)(0x0f00fd + (0x##o<<24)))
                  ^
lj_target_x86.h:259:14: note: in expansion of macro ‘XO_0f’
   XO_BSWAP = XO_0f(c8),
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:291:13: note: in expansion of macro ‘XO_’
   XO_FLDd = XO_(d9), XOg_FLDd = 0,
             ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:292:13: note: in expansion of macro ‘XO_’
   XO_FLDq = XO_(dd), XOg_FLDq = 0,
             ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:293:14: note: in expansion of macro ‘XO_’
   XO_FILDd = XO_(db), XOg_FILDd = 0,
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:294:14: note: in expansion of macro ‘XO_’
   XO_FILDq = XO_(df), XOg_FILDq = 5,
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:295:14: note: in expansion of macro ‘XO_’
   XO_FSTPd = XO_(d9), XOg_FSTPd = 3,
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:296:14: note: in expansion of macro ‘XO_’
   XO_FSTPq = XO_(dd), XOg_FSTPq = 3,
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:297:15: note: in expansion of macro ‘XO_’
   XO_FISTPq = XO_(df), XOg_FISTPq = 7,
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:298:16: note: in expansion of macro ‘XO_’
   XO_FISTTPq = XO_(dd), XOg_FISTTPq = 1,
                ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:299:14: note: in expansion of macro ‘XO_’
   XO_FADDq = XO_(dc), XOg_FADDq = 0,
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:300:14: note: in expansion of macro ‘XO_’
   XO_FLDCW = XO_(d9), XOg_FLDCW = 5,
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:301:15: note: in expansion of macro ‘XO_’
   XO_FNSTCW = XO_(d9), XOg_FNSTCW = 7
               ^
In file included from lib_jit.c:29:0:
lj_vmevent.h:22:23: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
   LJ_VMEVENT_##name = ((LJ_VMEVENT_##name##_) & 7)|((hash) << 3)
                       ^
lj_vmevent.h:27:3: note: in expansion of macro ‘VMEVENT_DEF’
   VMEVENT_DEF(TRACE, 0xb2d91467),
   ^
lj_vmevent.h:22:23: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
   LJ_VMEVENT_##name = ((LJ_VMEVENT_##name##_) & 7)|((hash) << 3)
                       ^
lj_vmevent.h:28:3: note: in expansion of macro ‘VMEVENT_DEF’
   VMEVENT_DEF(RECORD, 0x9284bf4f),
   ^
lj_vmevent.h:22:23: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
   LJ_VMEVENT_##name = ((LJ_VMEVENT_##name##_) & 7)|((hash) << 3)
                       ^
lj_vmevent.h:29:3: note: in expansion of macro ‘VMEVENT_DEF’
   VMEVENT_DEF(TEXIT, 0xb29df2b0),
   ^
In file included from lib_jit.c:14:0:
lib_jit.c: In function ‘lj_cf_jit_util_funcinfo’:
lib_jit.c:211:19: warning: ISO C forbids conversion of function pointer to object pointer type [-Wpedantic]
         (intptr_t)(void *)fn->c.f);
                   ^
lj_obj.h:785:42: note: in definition of macro ‘setintptrV’
 #define setintptrV(o, i) setint64V((o), (i))
                                          ^
lib_jit.c: In function ‘lj_cf_jit_util_ircalladdr’:
lib_jit.c:410:36: warning: ISO C forbids conversion of function pointer to object pointer type [-Wpedantic]
     setintptrV(L->top-1, (intptr_t)(void *)lj_ir_callinfo[idx].func);
                                    ^
lj_obj.h:785:42: note: in definition of macro ‘setintptrV’
 #define setintptrV(o, i) setint64V((o), (i))
                                          ^
lj_target_x86.h:191:1: error: Signed integer overflow.

    Undefined behavior (UB-CCV1):
        see C11 section 6.5:5 http://rvdoc.org/C11/6.5
        see C11 section J.2:1 item 36 http://rvdoc.org/C11/J.2
        see CERT-C section INT32-C http://rvdoc.org/CERT-C/INT32-C
        see MISRA-C section 8.1:3 http://rvdoc.org/MISRA-C/8.1

lj_target_x86.h:191:1: error: Enum initializer outside the range representable by int.

    Constraint violation (CV-CDE2):
        see C11 section 6.7.2.2:2 http://rvdoc.org/C11/6.7.2.2
        see CERT-C section MSC40-C http://rvdoc.org/CERT-C/MSC40-C
        see MISRA-C section 8.1:1 http://rvdoc.org/MISRA-C/8.1

lj_target_x86.h:191:1: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lj_target_x86.h:191:1: error: Potential negative zero produced via bitwise operations, undefined under sign and magnitude or one's complement arithmetic, implementation-defined otherwise.

    Implementation-dependent undefined behavior (IMPLUB-CEB12):
        see C11 section 6.2.6.2:4 http://rvdoc.org/C11/6.2.6.2
        see C11 section J.2:1 item 14 http://rvdoc.org/C11/J.2
        see CERT-C section INT13-C http://rvdoc.org/CERT-C/INT13-C
        see CERT-C section MSC15-C http://rvdoc.org/CERT-C/MSC15-C
        see MISRA-C section 8.1:3 http://rvdoc.org/MISRA-C/8.1

lj_vmevent.h:25:1: error: Enum initializer outside the range representable by int.

    Constraint violation (CV-CDE2):
        see C11 section 6.7.2.2:2 http://rvdoc.org/C11/6.7.2.2
        see CERT-C section MSC40-C http://rvdoc.org/CERT-C/MSC40-C
        see MISRA-C section 8.1:1 http://rvdoc.org/MISRA-C/8.1

lj_vmevent.h:25:1: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

lib_jit.c:362:5: warning: Conversion to signed integer outside the range that can be represented.

    Implementation defined behavior (IMPL-CCV2):
        see C11 section 6.3.1.3:3 http://rvdoc.org/C11/6.3.1.3
        see C11 section J.3.5:1 item 4 http://rvdoc.org/C11/J.3.5
        see CERT-C section INT31-C http://rvdoc.org/CERT-C/INT31-C

In file included from lj_target.h:138:0,
                 from lib_jit.c:25:
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:230:12: note: in expansion of macro ‘XO_’
   XO_MOV = XO_(8b),
            ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:231:14: note: in expansion of macro ‘XO_’
   XO_MOVto = XO_(89),
              ^
lj_target_x86.h:182:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_66(o) ((uint32_t)(0x6600fd + (0x##o<<24)))
                  ^
lj_target_x86.h:232:15: note: in expansion of macro ‘XO_66’
   XO_MOVtow = XO_66(89),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:233:15: note: in expansion of macro ‘XO_’
   XO_MOVtob = XO_(88),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:234:14: note: in expansion of macro ‘XO_’
   XO_MOVmi = XO_(c7),
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:235:15: note: in expansion of macro ‘XO_’
   XO_MOVmib = XO_(c6),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:236:12: note: in expansion of macro ‘XO_’
   XO_LEA = XO_(8d),
            ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:237:16: note: in expansion of macro ‘XO_’
   XO_ARITHib = XO_(80),
                ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:238:15: note: in expansion of macro ‘XO_’
   XO_ARITHi = XO_(81),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:239:16: note: in expansion of macro ‘XO_’
   XO_ARITHi8 = XO_(83),
                ^
lj_target_x86.h:182:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_66(o) ((uint32_t)(0x6600fd + (0x##o<<24)))
                  ^
lj_target_x86.h:240:17: note: in expansion of macro ‘XO_66’
   XO_ARITHiw8 = XO_66(83),
                 ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:241:15: note: in expansion of macro ‘XO_’
   XO_SHIFTi = XO_(c1),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:242:15: note: in expansion of macro ‘XO_’
   XO_SHIFT1 = XO_(d1),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:243:16: note: in expansion of macro ‘XO_’
   XO_SHIFTcl = XO_(d3),
                ^
lj_target_x86.h:181:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_0f(o) ((uint32_t)(0x0f00fd + (0x##o<<24)))
                  ^
lj_target_x86.h:244:13: note: in expansion of macro ‘XO_0f’
   XO_IMUL = XO_0f(af),
             ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:248:14: note: in expansion of macro ‘XO_’
   XO_TESTb = XO_(84),
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:249:13: note: in expansion of macro ‘XO_’
   XO_TEST = XO_(85),
             ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:250:16: note: in expansion of macro ‘XO_’
   XO_GROUP3b = XO_(f6),
                ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:251:15: note: in expansion of macro ‘XO_’
   XO_GROUP3 = XO_(f7),
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:252:16: note: in expansion of macro ‘XO_’
   XO_GROUP5b = XO_(fe),
                ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:253:15: note: in expansion of macro ‘XO_’
   XO_GROUP5 = XO_(ff),
               ^
lj_target_x86.h:181:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_0f(o) ((uint32_t)(0x0f00fd + (0x##o<<24)))
                  ^
lj_target_x86.h:254:15: note: in expansion of macro ‘XO_0f’
   XO_MOVZXb = XO_0f(b6),
               ^
lj_target_x86.h:181:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_0f(o) ((uint32_t)(0x0f00fd + (0x##o<<24)))
                  ^
lj_target_x86.h:255:15: note: in expansion of macro ‘XO_0f’
   XO_MOVZXw = XO_0f(b7),
               ^
lj_target_x86.h:181:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_0f(o) ((uint32_t)(0x0f00fd + (0x##o<<24)))
                  ^
lj_target_x86.h:256:15: note: in expansion of macro ‘XO_0f’
   XO_MOVSXb = XO_0f(be),
               ^
lj_target_x86.h:181:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_0f(o) ((uint32_t)(0x0f00fd + (0x##o<<24)))
                  ^
lj_target_x86.h:257:15: note: in expansion of macro ‘XO_0f’
   XO_MOVSXw = XO_0f(bf),
               ^
lj_target_x86.h:181:18: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_0f(o) ((uint32_t)(0x0f00fd + (0x##o<<24)))
                  ^
lj_target_x86.h:259:14: note: in expansion of macro ‘XO_0f’
   XO_BSWAP = XO_0f(c8),
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:291:13: note: in expansion of macro ‘XO_’
   XO_FLDd = XO_(d9), XOg_FLDd = 0,
             ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:292:13: note: in expansion of macro ‘XO_’
   XO_FLDq = XO_(dd), XOg_FLDq = 0,
             ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:293:14: note: in expansion of macro ‘XO_’
   XO_FILDd = XO_(db), XOg_FILDd = 0,
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:294:14: note: in expansion of macro ‘XO_’
   XO_FILDq = XO_(df), XOg_FILDq = 5,
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:295:14: note: in expansion of macro ‘XO_’
   XO_FSTPd = XO_(d9), XOg_FSTPd = 3,
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:296:14: note: in expansion of macro ‘XO_’
   XO_FSTPq = XO_(dd), XOg_FSTPq = 3,
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:297:15: note: in expansion of macro ‘XO_’
   XO_FISTPq = XO_(df), XOg_FISTPq = 7,
               ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:298:16: note: in expansion of macro ‘XO_’
   XO_FISTTPq = XO_(dd), XOg_FISTTPq = 1,
                ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:299:14: note: in expansion of macro ‘XO_’
   XO_FADDq = XO_(dc), XOg_FADDq = 0,
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:300:14: note: in expansion of macro ‘XO_’
   XO_FLDCW = XO_(d9), XOg_FLDCW = 5,
              ^
lj_target_x86.h:179:17: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
 #define XO_(o)  ((uint32_t)(0x0000fe + (0x##o<<24)))
                 ^
lj_target_x86.h:301:15: note: in expansion of macro ‘XO_’
   XO_FNSTCW = XO_(d9), XOg_FNSTCW = 7
               ^
In file included from lib_jit.c:29:0:
lj_vmevent.h:22:23: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
   LJ_VMEVENT_##name = ((LJ_VMEVENT_##name##_) & 7)|((hash) << 3)
                       ^
lj_vmevent.h:27:3: note: in expansion of macro ‘VMEVENT_DEF’
   VMEVENT_DEF(TRACE, 0xb2d91467),
   ^
lj_vmevent.h:22:23: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
   LJ_VMEVENT_##name = ((LJ_VMEVENT_##name##_) & 7)|((hash) << 3)
                       ^
lj_vmevent.h:28:3: note: in expansion of macro ‘VMEVENT_DEF’
   VMEVENT_DEF(RECORD, 0x9284bf4f),
   ^
lj_vmevent.h:22:23: warning: ISO C restricts enumerator values to range of ‘int’ [-Wpedantic]
   LJ_VMEVENT_##name = ((LJ_VMEVENT_##name##_) & 7)|((hash) << 3)
                       ^
lj_vmevent.h:29:3: note: in expansion of macro ‘VMEVENT_DEF’
   VMEVENT_DEF(TEXIT, 0xb29df2b0),
   ^
In file included from lib_jit.c:14:0:
lib_jit.c: In function ‘lj_cf_jit_util_funcinfo’:
lib_jit.c:211:19: warning: ISO C forbids conversion of function pointer to object pointer type [-Wpedantic]
         (intptr_t)(void *)fn->c.f);
                   ^
lj_obj.h:785:42: note: in definition of macro ‘setintptrV’
 #define setintptrV(o, i) setint64V((o), (i))
                                          ^
lib_jit.c: In function ‘lj_cf_jit_util_ircalladdr’:
lib_jit.c:410:36: warning: ISO C forbids conversion of function pointer to object pointer type [-Wpedantic]
     setintptrV(L->top-1, (intptr_t)(void *)lj_ir_callinfo[idx].func);
                                    ^
lj_obj.h:785:42: note: in definition of macro ‘setintptrV’
 #define setintptrV(o, i) setint64V((o), (i))
                                          ^
CC        lib_ffi.o
CC        lib_init.o
AR        libluajit.a
CC        luajit.o
BUILDVM   jit/vmdef.lua
DYNLINK   libluajit.so
LINK      luajit
OK        Successfully built LuaJIT
make[1]: Leaving directory '/home/andy/Desktop/test598/curlMini/cs510Files/report6/LuaJit/total_luajit/LuaJIT/src'
==== Successfully built LuaJIT 2.0.5 ====
